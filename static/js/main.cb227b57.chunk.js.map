{"version":3,"sources":["components/header/index.js","components/header/header.js","components/currency-list/currency-list.js","actions/index.js","components/pages/homepage.js","components/pages/current-curency.js","components/user-currency/user-currency.js","components/user-currency/index.js","services/currency-service.js","services/index.js","app.js","reducers/currentCurrencies.js","reducers/index.js","store.js","index.js"],"names":["Header","className","CurrencyList","currentUsd","totalUsd","sumTotalUsd","sumUsd","userCurrency","Form","Group","controlId","Label","Control","onChange","event","item","target","value","type","placeholder","CurrencyListContainer","this","props","Component","connect","currentCurrencies","currentRUB","currentEURO","toFixed","console","log","dispatch","action","payload","sumTotal","HomePage","UserCurrency","userChangeCurrency","Select","UserCurrencyContainer","changeCurrency","CurrencyService","apiBase","getCurrencies","a","getCurrency","res","valutes","usd","Valute","USD","Value","euro","EUR","url","fetch","ok","Error","status","json","App","currencyService","loadingCurrentCurrency","then","onLoadCurrentCurrency","catch","path","element","state","updateCurrency","updateCurrentCurrencies","undefined","reducer","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb227b57.chunk.js","sourcesContent":["import Header from \"./header\";\r\n\r\nexport default Header","import { React } from \"react\";\r\n\r\nimport './header.css'\r\n\r\nconst Header = () => {    \r\n    return (\r\n        <header className=\"header\">\r\n            <h2 className=\"h2\">Конвертация валют</h2>            \r\n        </header>\r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default Header","import {React, Component} from \"react\";\r\nimport { Form} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport './currency-list.css';\r\nimport { sumTotal } from \"../../actions\";\r\n\r\n\r\nconst CurrencyList = ( {currentUsd, totalUsd, sumTotalUsd, sumUsd, userCurrency}) => {     \r\n    const insertTotal = (event) => {        \r\n        const item =event.target.value;\r\n        return sumTotalUsd(item)\r\n    }\r\n    return (     \r\n        <div className=\"currency-list\">\r\n            <div className=\"form\" >\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>{userCurrency} in RUB</Form.Label>\r\n                    <Form.Control\r\n                    onChange={insertTotal} type=\"number\" placeholder=\"Введите количество\" />\r\n                   \r\n                </Form.Group>\r\n                \r\n            </div>\r\n            <p className=\"result-block\">Итого:</p>\r\n            <p className=\"result-field\">{sumUsd}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nclass CurrencyListContainer extends Component {   \r\n    \r\n    \r\n    render () {\r\n        const {sumTotalUsd, sumUsd, userCurrency} = this.props\r\n        return (                \r\n                <CurrencyList sumUsd={sumUsd} sumTotalUsd={sumTotalUsd} userCurrency={userCurrency}/>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({currentCurrencies: {currentUsd, currentRUB, totalUsd, userCurrency, currentEURO}}) => {\r\n    let sumUsd = 0;\r\n    switch (userCurrency) {\r\n        case 'USD':\r\n            sumUsd = (currentUsd*totalUsd).toFixed(2);\r\n            break\r\n        case 'EURO':\r\n             sumUsd = (currentEURO*totalUsd).toFixed(2);\r\n             break\r\n        case 'RUB':\r\n             sumUsd = (currentRUB*totalUsd).toFixed(2);\r\n             break\r\n        default:\r\n            sumUsd = 0\r\n    }\r\n    console.log(sumUsd)\r\n    return {sumUsd, userCurrency}\r\n} \r\n\r\nconst mapDispatchToProps = (dispatch, action) => {\r\n    return {\r\n        sumTotalUsd: (item) => dispatch(sumTotal(item))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrencyListContainer)","const sumTotal = (item) => {\r\n    return {\r\n        type: 'SUM_TOTAL',\r\n        payload: item\r\n    }\r\n}\r\n\r\nconst changeCurrency = (item) => {\r\n    return {\r\n        type: 'CHANGE_CURRENCY',\r\n        payload: item\r\n    }\r\n}\r\n\r\nconst updateCurrency = (item) => {\r\n   \r\n    return {\r\n        type: 'UPDATE_CURRENCY',\r\n        payload: item\r\n    }\r\n}\r\n\r\nexport {sumTotal, changeCurrency, updateCurrency}","import {React, Fragment } from \"react\";\r\nimport CurrencyListContainer from \"../currency-list/currency-list\";\r\n\r\nconst HomePage = () => {\r\n    \r\n    return (\r\n        <Fragment>\r\n            <CurrencyListContainer />\r\n        </Fragment>  \r\n    )\r\n    \r\n}\r\nexport default HomePage","import {React, Fragment } from \"react\";\r\nimport \"./pages.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst CurrentCurrencies = ({currentUsd, currentEURO}) => {\r\n   \r\n    return (\r\n        <Fragment >\r\n            <h3 className=\"pages pages__h3\">Актуальные курсы валют:</h3>\r\n            <div className=\"pages__currency-window\">\r\n                <p className=\"pages__currency-window_p\">USD:</p>\r\n                <p className=\"pages__currency-window_p\">{currentUsd}</p>                \r\n            </div>\r\n            <div className=\"pages__currency-window\">\r\n                <p className=\"pages__currency-window_p\">EURO:</p>\r\n                <p className=\"pages__currency-window_p\">{currentEURO}</p>\r\n            </div>\r\n        </Fragment>  \r\n    )   \r\n}\r\n\r\nconst mapStateToProps = ({currentCurrencies: {currentUsd, currentEURO}}) => {\r\n    return {currentUsd, currentEURO}\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(CurrentCurrencies)","import {React, Component} from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeCurrency} from \"../../actions\";\r\n\r\n\r\n\r\n const UserCurrency = ({userChangeCurrency}) => {     \r\n    const onUserChangeCurrency = (event) => {\r\n        const item = event.target.value;    \r\n            \r\n        return userChangeCurrency(item)\r\n    }\r\n        return (\r\n          <div className=\"currency-list currency-list-user\">\r\n            <p className=\"currency-list-_p\" >Ваша валюта:</p>\r\n            <Form.Select\r\n            onChange = {onUserChangeCurrency} aria-label=\"Default select example\">\r\n              \r\n                <option value=\"USD\">USD</option>\r\n                <option value=\"EURO\">EURO</option>\r\n                <option value=\"RUB\">RUB</option>\r\n            </Form.Select>\r\n          </div>\r\n        )\r\n   }\r\n\r\n\r\nclass UserCurrencyContainer extends Component  {\r\n    \r\n    render () {\r\n        const {userChangeCurrency} = this.props\r\n        return (\r\n        <UserCurrency userChangeCurrency={userChangeCurrency}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({userChangeCurrency}) => {\r\n    return {userChangeCurrency}\r\n} \r\n\r\nconst mapDispatchToProps = (dispatch, action) => {\r\n    return {       \r\n        userChangeCurrency: (item) => dispatch(changeCurrency(item))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserCurrencyContainer)\r\n","import UserCurrency from \"./user-currency\";\r\n\r\nexport default UserCurrency","export default class CurrencyService {\r\n    apiBase = 'https://www.cbr-xml-daily.ru/daily_json.js'\r\n\r\n    async getCurrency(url) {\r\n\r\n    const res = await fetch(this.apiBase);\r\n        \r\n    if (!res.ok) {\r\n        // eslint-disable-next-line no-useless-concat\r\n        throw new Error (`Could not fetch ${this.apiBase}` + ` , received ${res.status}`)\r\n      }\r\n      \r\n\r\n    return res.json()\r\n\r\n    }\r\n\r\n    getCurrencies = async () => {\r\n        const res = await this.getCurrency()\r\n        const valutes = {\r\n          usd:res.Valute.USD.Value,\r\n          euro: res.Valute.EUR.Value\r\n        }\r\n       \r\n        return valutes\r\n      }\r\n\r\n \r\n    }","import CurrencyService from \"./currency-service\";\r\n\r\nexport default CurrencyService","import {React, Component} from \"react\";\r\nimport Header from \"./components/header\";\r\nimport {HomePage, CurrentCurrencies} from \"./components/pages\";\r\nimport UserCurrencyContainer from \"./components/user-currency\"\r\nimport CurrencyService from \"./services\";\r\nimport {updateCurrency} from \"./actions\";\r\nimport {connect} from 'react-redux'\r\nimport { Routes, Route } from \"react-router\";\r\n\r\nclass App extends Component  {\r\n  currencyService = new CurrencyService()\r\n\r\n\r\n  loadingCurrentCurrency = () => {\r\n    this.currencyService\r\n    .getCurrencies()\r\n    .then(this.props.onLoadCurrentCurrency)\r\n    .catch()\r\n  }\r\n\r\n componentDidMount(){\r\n   this.loadingCurrentCurrency()\r\n }\r\n\r\n  render () \r\n  {\r\n    return (\r\n      <div className=\"App\">        \r\n          <Header />\r\n          <UserCurrencyContainer />\r\n          <Routes>\r\n            <Route path=\"/spa-app-currency-conversion/\" element={<HomePage />} />\r\n            <Route path=\"/\" element={<HomePage />} />\r\n            <Route path=\"/current-exchange-rate/\" element={<CurrentCurrencies />} />  \r\n          </Routes>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return state\r\n} \r\n\r\nconst mapDispatchToProps = (dispatch, action) => {\r\n  return {\r\n    onLoadCurrentCurrency: (item) => dispatch(updateCurrency(item))\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","\r\nconst updateCurrentCurrencies = (state , action) => {\r\n    \r\n    if (state === undefined) {\r\n        return {\r\n                currentUsd:'70',\r\n                totalUsd:  '0',\r\n                sumUsd: '0',\r\n                currentEURO: '90',\r\n                currentRUB: '1',\r\n                userCurrency: 'USD'\r\n        }\r\n    }\r\n \r\n\r\n    switch (action.type) {\r\n        case 'SUM_TOTAL':            \r\n            return {\r\n                ...state.currentCurrencies,\r\n                totalUsd:  action.payload,\r\n                               \r\n            };\r\n\r\n        case 'CHANGE_CURRENCY':\r\n            return {\r\n                ...state.currentCurrencies,\r\n                userCurrency: action.payload\r\n            }\r\n\r\n        case 'UPDATE_CURRENCY':\r\n            const {usd, euro} = action.payload\r\n            return {\r\n                ...state.currentCurrencies,\r\n                currentUsd: usd,\r\n                currentEURO: euro\r\n                              \r\n            }\r\n        default: return state.currentCurrencies\r\n    }\r\n}\r\n\r\n\r\nexport default updateCurrentCurrencies","import updateCurrentCurrencies from \"./currentCurrencies\"\r\n\r\n\r\nconst reducer = (state, action) => {\r\n    return {\r\n        currentCurrencies: updateCurrentCurrencies(state , action)\r\n    }\r\n}\r\nexport default reducer;\r\n","import reducer from \"./reducers\";\r\nimport {createStore} from 'redux';\r\nconst store = createStore(reducer);\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app';\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router} from \"react-router-dom\";\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}