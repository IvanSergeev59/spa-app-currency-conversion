{"version":3,"sources":["components/header/index.js","components/header/header.js","components/currency-list/currency-list.js","actions/index.js","components/pages/homepage.js","components/pages/current-curency.js","components/user-currency/user-currency.js","components/user-currency/index.js","components/currency-service-context/currency-service-context.js","hoc/index.js","hoc/withCurrencyService.js","utils.js/utils.js","utils.js/index.js","app.js","reducers/currentCurrencies.js","reducers/index.js","store.js","services/currency-service.js","index.js","services/index.js"],"names":["Header","className","to","CurrencyList","sumTotalUsd","currentCurrencies","errorUserWrongInput","exchangeCurrency_1","userCurrency","exchangeCurrency_2","userSumInputMoney_2","userSumInputMoney_1","Form","Group","Label","Control","onChange","event","item","target","value","id","type","placeholder","CurrencyListContainer","this","props","Component","connect","dispatch","payload","sumTotal","HomePage","exchangeCurrency_1_value","exchangeCurrency_2_value","UserCurrency","userChangeCurrency","Select","UserCurrencyContainer","action","changeCurrency","React","createContext","CurrencyServiceProvider","Provider","CurrencyServiceConsumer","Consumer","withCurrencyService","Wrapped","currencyService","compose","funcs","comp","reduceRight","wrapped","f","App","fetchCurrencies","path","element","state","ownProps","getCurrencies","then","data","catch","updateCurrentCurrencies","undefined","usdToRub","usdToEuro","euroToRub","euroToUsd","rubToEuro","rubToUsd","total","calculateOfUserCurrency","a","b","c","d","test","onCalculateOfUserCurrency","toFixed","console","log","withCalculateOfUserCurrency","calculateUserInputMoney","currency","currentParams","onChangeCurrency","reducer","store","createStore","applyMiddleware","thunkMiddleware","next","getState","setTimeout","CurrencyService","apiBase","getCurrency","res","Valute","USD","Value","EUR","valutes","fetch","ok","Error","status","json","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.55a7aa13.chunk.js","sourcesContent":["import Header from \"./header\";\r\n\r\nexport default Header","import { React } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./header.css\"\r\nconst Header = () => {    \r\n    return (\r\n        <header className=\"header\">  \r\n            <h3 className=\"header__h3\">          \r\n                <Link className=\"header__a\" to=\"/\">Конвертер валют</Link>\r\n            </h3>\r\n            <div className=\"header__container\">\r\n                <Link  className=\"header__a\" to=\"/\">Главная</Link>\r\n                <Link  className=\"header__a\" to=\"/current-exchange-rate/\">Курс валют</Link>    \r\n            </div>                 \r\n        </header>\r\n        \r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default Header\r\n\r\n","import {React, Component} from \"react\";\r\nimport { Form} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport './currency-list.css';\r\nimport { sumTotal} from \"../../actions\";\r\n\r\n\r\n\r\nconst CurrencyList = ( {sumTotalUsd, currentCurrencies}) => {     \r\n    const {errorUserWrongInput,exchangeCurrency_1, \r\n        userCurrency, exchangeCurrency_2, userSumInputMoney_2, userSumInputMoney_1 } = currentCurrencies\r\n \r\n    const insertTotal = (event) => {       \r\n        const item =event.target.value;\r\n        \r\n        return sumTotalUsd(item)\r\n    }\r\n    return (     \r\n        <div className=\"currency-list\">\r\n            <div className=\"form\" >\r\n                <Form.Group className=\"currency-list-margin\">\r\n                    <Form.Label>Количество</Form.Label>                   \r\n                    <Form.Control\r\n                    onChange={insertTotal} id=\"only_num\" type=\"number\" placeholder=\"Введите количество\" />\r\n                   \r\n                </Form.Group>\r\n            <p className=\"currency-list__error\">{errorUserWrongInput}</p>\r\n            <p className=\"result-block\">{userCurrency} in {exchangeCurrency_1}:</p>\r\n            <p className=\"result-field\">{userSumInputMoney_1}</p>                \r\n            </div>\r\n            <p className=\"result-block\">{userCurrency} in {exchangeCurrency_2}:</p>\r\n            <p className=\"result-field\">{userSumInputMoney_2}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nclass CurrencyListContainer extends Component {      \r\n  \r\n    render () {   \r\n     \r\n        const {sumTotalUsd, currentCurrencies} = this.props\r\n        return (                \r\n                <CurrencyList sumTotalUsd={sumTotalUsd} currentCurrencies={currentCurrencies}/>           \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({currentCurrencies}) => {\r\n    return {currentCurrencies}\r\n} \r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sumTotalUsd: (item) => dispatch(sumTotal(item)),\r\n        \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrencyListContainer)","const currenciesRequested = () => {\r\n    return {\r\n        type: 'CURRENCIES_REQUESTED'\r\n    }\r\n}\r\n\r\nconst sumTotal = (item) => {\r\n    return {\r\n        type: 'SUM_TOTAL',\r\n        payload: item\r\n    }\r\n}\r\n\r\nconst changeCurrency = (item) => {\r\n    return {\r\n        type: 'CHANGE_CURRENCY',\r\n        payload: item\r\n    }\r\n}\r\n\r\nconst updateCurrency = (item) => {\r\n   \r\n    return {\r\n        type: 'UPDATE_CURRENCY',\r\n        payload: item\r\n    }\r\n}\r\n\r\nconst fetchCurrencies = (currencyService) => () => (dispatch) => {  \r\n    dispatch(currenciesRequested());\r\n    currencyService.getCurrencies()\r\n    .then((data) => dispatch(updateCurrency(data)))\r\n    .catch()\r\n}\r\n\r\nexport {sumTotal, changeCurrency, updateCurrency, fetchCurrencies}","import {React, Fragment } from \"react\";\r\nimport CurrencyListContainer from \"../currency-list/currency-list\";\r\n\r\nconst HomePage = () => {\r\n    \r\n    return (\r\n        <Fragment>\r\n            <CurrencyListContainer />\r\n        </Fragment>  \r\n    )\r\n    \r\n}\r\nexport default HomePage","import {React, Fragment } from \"react\";\r\nimport \"./pages.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst CurrentCurrencies = ({currentCurrencies}) => {\r\n    const {exchangeCurrency_1_value, exchangeCurrency_2_value, exchangeCurrency_1, exchangeCurrency_2 } = currentCurrencies\r\n    return (\r\n        <Fragment >\r\n            <h3 className=\"pages pages__h3\">Актуальный курс валют:</h3>\r\n            <div className=\"pages__currency-window\">\r\n                <p className=\"pages__currency-window_p\">{exchangeCurrency_1}:</p>\r\n                <p className=\"pages__currency-window_p\">{exchangeCurrency_1_value}</p>                \r\n            </div>\r\n            <div className=\"pages__currency-window\">\r\n                <p className=\"pages__currency-window_p\">{exchangeCurrency_2}:</p>\r\n                <p className=\"pages__currency-window_p\">{exchangeCurrency_2_value}</p>\r\n            </div>\r\n        </Fragment>  \r\n    )   \r\n}\r\n\r\nconst mapStateToProps = ({currentCurrencies}) => {\r\n       return {currentCurrencies}          \r\n}\r\n\r\nexport default connect(mapStateToProps)(CurrentCurrencies)","import {React, Component} from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeCurrency} from \"../../actions\";\r\n\r\n\r\n\r\n const UserCurrency = ({userChangeCurrency}) => {     \r\n    const onUserChangeCurrency = (event) => {\r\n        const item = event.target.value;        \r\n        return userChangeCurrency(item)\r\n    }\r\n        return (\r\n          <div className=\"currency-list currency-list-user\">\r\n            <p className=\"currency-list-_p\" >Ваша валюта:</p>\r\n            <Form.Select\r\n            onChange = {onUserChangeCurrency} aria-label=\"Default select example\">\r\n              \r\n                <option value=\"USD\">USD</option>\r\n                <option value=\"EURO\">EURO</option>\r\n                <option value=\"RUB\">RUB</option>\r\n            </Form.Select>\r\n          </div>\r\n        )\r\n   }\r\n\r\n\r\nclass UserCurrencyContainer extends Component  {\r\n    \r\n    render () {\r\n        const {userChangeCurrency} = this.props\r\n        return (\r\n        <UserCurrency userChangeCurrency={userChangeCurrency}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({userChangeCurrency}) => {\r\n    return {userChangeCurrency}\r\n} \r\n\r\nconst mapDispatchToProps = (dispatch, action) => {\r\n    return {       \r\n        userChangeCurrency: (item) => dispatch(changeCurrency(item))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserCurrencyContainer)\r\n","import UserCurrency from \"./user-currency\";\r\n\r\nexport default UserCurrency","import React from \"react\";\r\n\r\nconst {\r\n    Provider: CurrencyServiceProvider,\r\n    Consumer: CurrencyServiceConsumer\r\n} = React.createContext()\r\n\r\nexport {\r\n    CurrencyServiceProvider,\r\n    CurrencyServiceConsumer\r\n}","import withCurrencyService from \"./withCurrencyService\";\r\nexport default withCurrencyService","import React from \"react\";\r\nimport { CurrencyServiceConsumer } from \"../components/currency-service-context\";\r\n\r\nconst withCurrencyService = () => (Wrapped) => {\r\n    return (props) => {\r\n        return (\r\n            <CurrencyServiceConsumer>\r\n                {\r\n                    (currencyService) => {\r\n                        return (<Wrapped {...props}\r\n                            currencyService={currencyService} />)\r\n                    }\r\n                }\r\n            </CurrencyServiceConsumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withCurrencyService","const compose = (...funcs) => (comp) => {\r\n    return funcs.reduceRight(\r\n        (wrapped, f) => f(wrapped), comp);\r\n    };\r\n\r\n    export default compose","import compose from \"./utils\";\r\n\r\nexport default compose","import {React, Component} from \"react\";\r\nimport Header from \"./components/header\";\r\nimport {HomePage, CurrentCurrencies} from \"./components/pages\";\r\nimport UserCurrencyContainer from \"./components/user-currency\"\r\nimport { Routes, Route } from \"react-router\";\r\nimport withCurrencyService from \"./hoc\";\r\nimport { connect } from \"react-redux\";\r\nimport compose from \"./utils.js\";\r\nimport { fetchCurrencies } from \"./actions\";\r\n\r\nclass App  extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchCurrencies()\r\n  }\r\n\r\n  // loadingCurrentCurrency = () => {\r\n  //   this.currencyService\r\n  //   .getCurrencies()\r\n  //   .then(this.props.onLoadCurrentCurrency)\r\n  //   .catch()\r\n  // }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"App\">        \r\n          <Header />\r\n          <UserCurrencyContainer />\r\n          <Routes>\r\n            <Route path=\"/spa-app-currency-conversion/\" element={<HomePage />} />\r\n            <Route path=\"/*\" element={<HomePage />} />\r\n            <Route path=\"/current-exchange-rate/\" element={<CurrentCurrencies />} />  \r\n          </Routes>\r\n\r\n      </div>\r\n    );\r\n  \r\n  }\r\n}\r\n// const mapStateToProps = (state) => {\r\n//   return state\r\n// } \r\n\r\n// const mapDispatchToProps = (dispatch, action) => {\r\n//   return {\r\n//     onLoadCurrentCurrency: (item) => dispatch(updateCurrency(item))\r\n//   }\r\n// }\r\n\r\nconst mapStateToProps = (state) => {\r\n  return state\r\n}\r\n\r\nconst mapDispatchToProps =(dispatch, ownProps) => {\r\n    const {currencyService} = ownProps\r\n    return {\r\n      fetchCurrencies: () => dispatch(fetchCurrencies(currencyService)())\r\n    }\r\n}\r\nexport default compose( \r\n  withCurrencyService(),\r\nconnect(mapStateToProps, mapDispatchToProps))(App)\r\n","const onChangeCurrency = (state, currency) => { \r\n\r\n    const  {rubToUsd,euroToRub,total, usdToEuro, euroToUsd,\r\n        usdToRub,  rubToEuro} = state.currentCurrencies\r\n        \r\n        // update exchange rates\r\n    const changeCurrency = (exchangeCurrency_1, exchangeCurrency_2,\r\n        exchangeCurrency_1_value,exchangeCurrency_2_value,userSumInputMoney_1,userSumInputMoney_2 ) => {\r\n             return {exchangeCurrency_1, exchangeCurrency_2, exchangeCurrency_1_value,\r\n                exchangeCurrency_2_value,userSumInputMoney_1,  userSumInputMoney_2}\r\n         }\r\n\r\n    const chooseChangeCurrency = () => {\r\n        if (currency.payload === \"USD\") {\r\n            const currentParams =  changeCurrency('EURO', \"RUB\", usdToEuro, usdToRub,\r\n            (total*usdToEuro).toFixed(4),\r\n            (total*usdToRub).toFixed(4)) \r\n            return {currentParams}\r\n        } \r\n        else if (currency.payload === \"EURO\") {\r\n            const currentParams =  changeCurrency('USD', \"RUB\", euroToUsd, euroToRub,\r\n            (total*euroToUsd).toFixed(4),\r\n            (total*euroToRub).toFixed(4))\r\n            return {currentParams}\r\n        }\r\n        else {\r\n            const currentParams =  changeCurrency('USD', \"EUR\", rubToUsd, rubToEuro,\r\n            (total*rubToUsd).toFixed(4),\r\n            (total*rubToEuro).toFixed(4))\r\n            return {currentParams}\r\n            \r\n        }\r\n    }  \r\n    return {\r\n        ...state.currentCurrencies,\r\n        userCurrency: currency.payload,\r\n        ...chooseChangeCurrency().currentParams\r\n    }\r\n}\r\n\r\nconst calculateUserInputMoney = (state, action) => {\r\n    const {userCurrency, usdToRub, usdToEuro, euroToRub,\r\n         euroToUsd, rubToEuro, rubToUsd} = state.currentCurrencies;\r\n    const calculateOfUserCurrency = (a,b,c,d) => {\r\n        return {\r\n            userSumInputMoney_1: a,\r\n            userSumInputMoney_2: b,\r\n            total: c,\r\n            errorUserWrongInput: d\r\n        }\r\n    }\r\n    // validation user inputs\r\n    if (/^(0|[1-9]\\d*)$/.test(action.payload) & (action.payload >=0)) {  \r\n        const withCalculateOfUserCurrency = (userCurrency)  => { \r\n            if (userCurrency === \"USD\")    {\r\n                const onCalculateOfUserCurrency = calculateOfUserCurrency((action.payload*usdToEuro).toFixed(4), (action.payload*usdToRub).toFixed(4),\r\n                action.payload, ' ')\r\n                return {onCalculateOfUserCurrency} \r\n            }\r\n            else if (userCurrency === \"EURO\") {\r\n                console.log(action.payload, euroToUsd)\r\n                const onCalculateOfUserCurrency = calculateOfUserCurrency((action.payload*euroToUsd).toFixed(4),\r\n                (action.payload*euroToRub).toFixed(4),\r\n                action.payload, ' ')\r\n                return { onCalculateOfUserCurrency}\r\n            }   \r\n            else {\r\n                const onCalculateOfUserCurrency = calculateOfUserCurrency((action.payload*rubToUsd).toFixed(4),\r\n                (action.payload*rubToEuro).toFixed(4),\r\n                action.payload, ' ')\r\n                return {onCalculateOfUserCurrency} \r\n            }  \r\n        }\r\n        return {\r\n            ...state.currentCurrencies,\r\n            ...withCalculateOfUserCurrency(userCurrency).onCalculateOfUserCurrency\r\n        }\r\n    } else {\r\n        return {\r\n            ...state.currentCurrencies,\r\n            userSumInputMoney_1: 0,\r\n            userSumInputMoney_2: 0,\r\n            total: 0,\r\n            errorUserWrongInput: 'Неверное значение'\r\n            } \r\n        }\r\n}\r\n\r\n\r\nconst updateCurrentCurrencies = (state , action) => {    \r\n    if (state === undefined) {\r\n        return {\r\n                usdToRub:'70',\r\n                usdToEuro:'0',\r\n                euroToRub:'70',\r\n                euroToUsd:'0',\r\n                rubToEuro:'70',\r\n                rubToUsd:'0',                \r\n                userSumInputMoney_1: '0',\r\n                userSumInputMoney_2: '0',\r\n                userCurrency: 'USD',\r\n                exchangeCurrency_1: \"EURO\",\r\n                exchangeCurrency_2: 'RUB',\r\n                total: '0',\r\n                errorUserWrongInput: ' '\r\n        }\r\n    } \r\n\r\n    switch (action.type) {\r\n        // user input money and calc it on current exchange rate\r\n        case 'SUM_TOTAL':                   \r\n            return calculateUserInputMoney(state, action)\r\n\r\n        // user change default currency\r\n        case 'CHANGE_CURRENCY':           \r\n            return onChangeCurrency(state, action)            \r\n        // current currency exchange rates loading firstly or update\r\n        case 'UPDATE_CURRENCY':\r\n            return {\r\n                ...state.currentCurrencies,\r\n                ...action.payload,            \r\n                exchangeCurrency_1_value: action.payload.usdToEuro,\r\n                exchangeCurrency_2_value: action.payload.usdToRub                            \r\n            }\r\n        // spinner while current currency exchange rates loading\r\n        case 'CURRENCIES_REQUESTED':\r\n            return {\r\n                ...state.currentCurrencies,\r\n                exchangeCurrency_1_value: 'Загрузка',\r\n                exchangeCurrency_2_value: 'Загрузка'\r\n            }\r\n        default: return state.currentCurrencies\r\n    }\r\n}\r\n\r\n\r\nexport default updateCurrentCurrencies","import updateCurrentCurrencies from \"./currentCurrencies\"\r\n\r\n\r\nconst reducer = (state, action) => {\r\n    return {\r\n        currentCurrencies: updateCurrentCurrencies(state , action)\r\n    }\r\n}\r\nexport default reducer;\r\n","import reducer from \"./reducers\";\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nconst logMiddleware = ({ getState } ) => (next) => (action) => {\r\n \r\n    return next(action);\r\n} \r\n\r\nconst stringMiddleware = () => (next) => (action) => {\r\n    if (typeof action === 'string') {\r\n        return next({\r\n            type: action\r\n        });\r\n    }\r\n    return next(action);\r\n}\r\n\r\nconst store = createStore(reducer, applyMiddleware( thunkMiddleware, stringMiddleware, logMiddleware));\r\n\r\nconst delayedActionCreator = (timeout) => (dispatch) => {\r\n    setTimeout(() => dispatch({\r\n        type: 'DELATED_ACTION'\r\n    }), 2000);\r\n}\r\nstore.dispatch(delayedActionCreator(3000));\r\n\r\nexport default store","export default class CurrencyService {\r\n    apiBase = 'https://www.cbr-xml-daily.ru/daily_json.js'\r\n\r\n    async getCurrency() {\r\n\r\n      const res = await fetch(this.apiBase);\r\n          \r\n      if (!res.ok) {\r\n          // eslint-disable-next-line no-useless-concat\r\n          throw new Error (`Could not fetch ${this.apiBase}` + ` , received ${res.status}`)\r\n        }return res.json()\r\n\r\n    }\r\n\r\n    getCurrencies = async () => {\r\n        const res = await this.getCurrency()\r\n        const usdToRub= res.Valute.USD.Value.toFixed(4);\r\n        const euroToRub = res.Valute.EUR.Value.toFixed(4);\r\n        const valutes = {\r\n          usdToRub: usdToRub,\r\n          euroToRub: euroToRub,\r\n          usdToEuro: (usdToRub/euroToRub).toFixed(4),\r\n          euroToUsd: (euroToRub/usdToRub).toFixed(4),\r\n          rubToEuro: (1/euroToRub).toFixed(4),\r\n          rubToUsd: (1/usdToRub).toFixed(4)          \r\n        }\r\n        return valutes\r\n      }\r\n\r\n \r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app';\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router} from \"react-router-dom\";\r\nimport store from './store';\r\nimport CurrencyService from './services';\r\nimport { CurrencyServiceProvider } from './components/currency-service-context';\r\n\r\nconst currencyService = new CurrencyService();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <CurrencyServiceProvider value={currencyService}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n    </CurrencyServiceProvider>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n","import CurrencyService from \"./currency-service\";\r\n\r\nexport default CurrencyService"],"sourceRoot":""}