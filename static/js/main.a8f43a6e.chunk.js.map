{"version":3,"sources":["components/header/index.js","components/header/header.js","components/currency-list/currency-list.js","actions/index.js","components/pages/homepage.js","components/pages/current-curency.js","components/user-currency/user-currency.js","components/user-currency/index.js","components/currency-service-context/currency-service-context.js","hoc/index.js","hoc/withCurrencyService.js","utils.js/utils.js","utils.js/index.js","app.js","reducers/calcilateMoney.js","reducers/currentCurrencies.js","reducers/index.js","store.js","services/currency-service.js","services/index.js","error-boundry/error-boundry.js","index.js"],"names":["Header","className","to","CurrencyList","sumTotalUsd","state","calculations","exchangeCurrency_1","userCurrency","exchangeCurrency_2","userSumInputMoney_2","userSumInputMoney_1","errorUserWrongInput","console","log","Form","Group","Label","Control","onChange","event","item","target","value","id","type","placeholder","CurrencyListContainer","this","props","Component","connect","dispatch","payload","sumTotal","HomePage","exchangeCurrency_1_value","exchangeCurrency_2_value","currentCurrencies","default_exchangeCurrency_1_value","default_exchangeCurrency_2_value","UserCurrency","userChangeCurrency","hideDefaultCurrencies","Select","UserCurrencyContainer","action","changeCurrency","React","createContext","CurrencyServiceProvider","Provider","CurrencyServiceConsumer","Consumer","withCurrencyService","Wrapped","currencyService","compose","funcs","comp","reduceRight","wrapped","f","App","fetchCurrencies","path","element","ownProps","getCurrencies","then","data","catch","calculateCurrencies","undefined","total","usdToRub","usdToEuro","euroToRub","euroToUsd","rubToEuro","rubToUsd","calculateOfUserCurrency","a","b","c","d","test","onCalculateOfUserCurrency","toFixed","withCalculateOfUserCurrency","calculateUserInputMoney","currency","currentParams","onChangeCurrency","updateCurrentCurrencies","ololo","reducer","store","createStore","applyMiddleware","thunkMiddleware","next","getState","setTimeout","CurrencyService","apiBase","getCurrency","res","Valute","USD","Value","EUR","valutes","fetch","ok","Error","status","json","ErrorBoundry","hasError","setState","children","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8f43a6e.chunk.js","sourcesContent":["import Header from \"./header\";\r\n\r\nexport default Header","import { React } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./header.css\"\r\nconst Header = () => {    \r\n    return (\r\n        <header className=\"header\">  \r\n            <h3 className=\"header__h3\">          \r\n                <Link className=\"header__a\" to=\"/\">Конвертер валют</Link>\r\n            </h3>\r\n            <div className=\"header__container\">\r\n                <Link  className=\"header__a\" to=\"/\">Главная</Link>\r\n                <Link  className=\"header__a\" to=\"/current-exchange-rate/\">Курс валют</Link>    \r\n            </div>                 \r\n        </header>\r\n        \r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default Header\r\n\r\n","import {React, Component} from \"react\";\r\nimport { Form} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport './currency-list.css';\r\nimport { sumTotal} from \"../../actions\";\r\n\r\n\r\n\r\nconst CurrencyList = ( {sumTotalUsd, state }) => {       \r\n    const {exchangeCurrency_1, userCurrency, exchangeCurrency_2, \r\n        userSumInputMoney_2, userSumInputMoney_1, \r\n        errorUserWrongInput } = state.calculations\r\n    console.log(state)\r\n    const insertTotal = (event) => {       \r\n        const item =event.target.value;\r\n        \r\n        return sumTotalUsd(item)\r\n    }\r\n\r\n    return (     \r\n        <div className=\"currency-list\">\r\n            <div className=\"form\" >\r\n                <Form.Group className=\"currency-list-margin\">\r\n                    <Form.Label>Количество</Form.Label>                   \r\n                    <Form.Control\r\n                    onChange={insertTotal} id=\"only_num\" type=\"number\" placeholder=\"Введите количество\" />\r\n                   \r\n                </Form.Group>\r\n            <p className=\"currency-list__error\">{errorUserWrongInput}</p>\r\n            <p className=\"result-block\">{userCurrency} in {exchangeCurrency_1}:</p>\r\n            <p className=\"result-field\">{userSumInputMoney_1}</p>                \r\n            </div>\r\n            <p className=\"result-block\">{userCurrency} in {exchangeCurrency_2}:</p>\r\n            <p className=\"result-field\">{userSumInputMoney_2}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nclass CurrencyListContainer extends Component {      \r\n    \r\n    render () {   \r\n     \r\n        const {sumTotalUsd, state} = this.props\r\n        return (                \r\n                <CurrencyList sumTotalUsd={sumTotalUsd} state={state}/>           \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ( state) => {\r\n    \r\n    return {state}\r\n} \r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sumTotalUsd: (item) => dispatch(sumTotal(item)),\r\n        \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrencyListContainer)","const currenciesRequested = () => {\r\n    return {\r\n        type: 'CURRENCIES_REQUESTED'\r\n    }\r\n}\r\n\r\nconst currenciesLoaded = (item) => {\r\n    return {\r\n        type: 'CURRENCIES_LOADED',\r\n        payload: item\r\n    }\r\n}\r\n\r\nconst currenciesHideDefaultCurrencies = () => {\r\n    return {\r\n        type: 'HIDE_DEFAULT_CURRENCIES'\r\n    }\r\n}\r\nconst sumTotal = (item) => {\r\n    return {\r\n        type: 'SUM_TOTAL',\r\n        payload: item\r\n    }\r\n}\r\n\r\nconst changeCurrency = (item) => {\r\n    return {\r\n        type: 'CHANGE_CURRENCY',\r\n        payload: item\r\n    }\r\n}\r\n\r\nconst updateCurrency = (item) => {\r\n   \r\n    return {\r\n        type: 'UPDATE_CURRENCY',\r\n        payload: item\r\n    }\r\n}\r\n\r\nconst fetchCurrencies = (currencyService) => () => (dispatch) => {  \r\n    dispatch(currenciesRequested());\r\n    currencyService.getCurrencies()\r\n    .then((data) => dispatch(currenciesLoaded(data)))\r\n    .catch();\r\n    \r\n}\r\n\r\nexport {sumTotal, changeCurrency, updateCurrency, currenciesHideDefaultCurrencies, fetchCurrencies, currenciesLoaded}","import {React, Fragment } from \"react\";\r\nimport CurrencyListContainer from \"../currency-list/currency-list\";\r\n\r\nconst HomePage = () => {\r\n    \r\n    return (\r\n        <Fragment>\r\n            <CurrencyListContainer />\r\n        </Fragment>  \r\n    )\r\n    \r\n}\r\nexport default HomePage","import {React, Fragment } from \"react\";\r\nimport \"./pages.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst CurrentCurrencies = ({state}) => {\r\n        const { exchangeCurrency_1, exchangeCurrency_2,\r\n             exchangeCurrency_1_value, exchangeCurrency_2_value} = state.calculations\r\n        const {default_exchangeCurrency_1_value, \r\n            default_exchangeCurrency_2_value} = state.currentCurrencies\r\n    return (\r\n        <Fragment >\r\n            <h3 className=\"pages pages__h3\">Актуальный курс валют:</h3>\r\n            <div className=\"pages__currency-window\">\r\n                <p className=\"pages__currency-window_p\">{exchangeCurrency_1}:</p>\r\n                <p className=\"pages__currency-window_p\">{default_exchangeCurrency_1_value}{exchangeCurrency_1_value}</p>                \r\n            </div>\r\n            <div className=\"pages__currency-window\">\r\n                <p className=\"pages__currency-window_p\">{exchangeCurrency_2}:</p>\r\n                <p className=\"pages__currency-window_p\">{default_exchangeCurrency_2_value}{exchangeCurrency_2_value}</p>\r\n            </div>\r\n        </Fragment>  \r\n    )   \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n       return {state}          \r\n}\r\n\r\nexport default connect(mapStateToProps)(CurrentCurrencies)","import {React, Component} from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeCurrency, currenciesHideDefaultCurrencies} from \"../../actions\";\r\n\r\n\r\n\r\n const UserCurrency = ({userChangeCurrency, hideDefaultCurrencies}) => {  \r\n     const ololo =() => {\r\n         return hideDefaultCurrencies()\r\n     }   \r\n    const onUserChangeCurrency = (event) => {\r\n        const item = event.target.value;  \r\n        ololo()      \r\n        return userChangeCurrency(item)\r\n    }\r\n        return (\r\n          <div className=\"currency-list currency-list-user\">\r\n            <p className=\"currency-list-_p\" >Ваша валюта:</p>\r\n            <Form.Select\r\n            onChange = {onUserChangeCurrency} aria-label=\"Default select example\">\r\n              \r\n                <option value=\"USD\">USD</option>\r\n                <option value=\"EURO\">EURO</option>\r\n                <option value=\"RUB\">RUB</option>\r\n            </Form.Select>\r\n          </div>\r\n        )\r\n   }\r\n\r\n\r\nclass UserCurrencyContainer extends Component  {\r\n    render () {\r\n        const {userChangeCurrency, hideDefaultCurrencies} = this.props\r\n        return (\r\n        <UserCurrency userChangeCurrency={userChangeCurrency} hideDefaultCurrencies={hideDefaultCurrencies}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({userChangeCurrency}) => {\r\n    return {userChangeCurrency}\r\n} \r\n\r\nconst mapDispatchToProps = (dispatch, action) => {\r\n    return {       \r\n        userChangeCurrency: (item) => dispatch(changeCurrency(item)),\r\n        hideDefaultCurrencies: () => dispatch(currenciesHideDefaultCurrencies())\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserCurrencyContainer)\r\n","import UserCurrency from \"./user-currency\";\r\n\r\nexport default UserCurrency","import React from \"react\";\r\n\r\nconst {\r\n    Provider: CurrencyServiceProvider,\r\n    Consumer: CurrencyServiceConsumer\r\n} = React.createContext()\r\n\r\nexport {\r\n    CurrencyServiceProvider,\r\n    CurrencyServiceConsumer\r\n}","import withCurrencyService from \"./withCurrencyService\";\r\nexport default withCurrencyService","import React from \"react\";\r\nimport { CurrencyServiceConsumer } from \"../components/currency-service-context\";\r\n\r\nconst withCurrencyService = () => (Wrapped) => {\r\n    return (props) => {\r\n        return (\r\n            <CurrencyServiceConsumer>\r\n                {\r\n                    (currencyService) => {\r\n                        return (<Wrapped {...props}\r\n                            currencyService={currencyService} />)\r\n                    }\r\n                }\r\n            </CurrencyServiceConsumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withCurrencyService","const compose = (...funcs) => (comp) => {\r\n    return funcs.reduceRight(\r\n        (wrapped, f) => f(wrapped), comp);\r\n    };\r\n\r\n    export default compose","import compose from \"./utils\";\r\n\r\nexport default compose","import {React, Component} from \"react\";\r\nimport Header from \"./components/header\";\r\nimport {HomePage, CurrentCurrencies} from \"./components/pages\";\r\nimport UserCurrencyContainer from \"./components/user-currency\"\r\nimport { Routes, Route } from \"react-router\";\r\nimport withCurrencyService from \"./hoc\";\r\nimport { connect } from \"react-redux\";\r\nimport compose from \"./utils.js\";\r\nimport { fetchCurrencies } from \"./actions\";\r\n\r\nclass App  extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchCurrencies()\r\n  }\r\n\r\n  // loadingCurrentCurrency = () => {\r\n  //   this.currencyService\r\n  //   .getCurrencies()\r\n  //   .then(this.props.onLoadCurrentCurrency)\r\n  //   .catch()\r\n  // }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"App\">        \r\n          <Header />\r\n          <UserCurrencyContainer />\r\n          <Routes>\r\n            <Route path=\"/spa-app-currency-conversion/\" element={<HomePage />} />\r\n            <Route path=\"/*\" element={<HomePage />} />\r\n            <Route path=\"/current-exchange-rate/\" element={<CurrentCurrencies />} />  \r\n          </Routes>\r\n\r\n      </div>\r\n    );\r\n  \r\n  }\r\n}\r\n// const mapStateToProps = (state) => {\r\n//   return state\r\n// } \r\n\r\n// const mapDispatchToProps = (dispatch, action) => {\r\n//   return {\r\n//     onLoadCurrentCurrency: (item) => dispatch(updateCurrency(item))\r\n//   }\r\n// }\r\n\r\nconst mapStateToProps = (state) => {\r\n  return state\r\n}\r\n\r\nconst mapDispatchToProps =(dispatch, ownProps) => {\r\n    const {currencyService} = ownProps\r\n    return {\r\n      fetchCurrencies: () => dispatch(fetchCurrencies(currencyService)())\r\n    }\r\n}\r\nexport default compose( \r\n  withCurrencyService(),\r\nconnect(mapStateToProps, mapDispatchToProps))(App)\r\n","const calculateUserInputMoney = (state, action) => {\r\n    const { usdToRub, usdToEuro, euroToRub,\r\n         euroToUsd, rubToEuro, rubToUsd} = state.currentCurrencies;\r\n    const {userCurrency} = state.calculations\r\n    const calculateOfUserCurrency = (a,b,c,d) => {\r\n        return {\r\n            userSumInputMoney_1: a,\r\n            userSumInputMoney_2: b,\r\n            total: c,\r\n            errorUserWrongInput: d\r\n        }\r\n    }\r\n    // validation user inputs\r\n    if (/^([0-9]+)([.,]?)([0-9]*)$/.test(action.payload) & (action.payload >=0)) {\r\n      \r\n        const withCalculateOfUserCurrency = (userCurrency)  => { \r\n            if (userCurrency === \"USD\")    {\r\n                const onCalculateOfUserCurrency = calculateOfUserCurrency((action.payload*usdToEuro).toFixed(4), (action.payload*usdToRub).toFixed(4),\r\n                action.payload, ' ')\r\n                return {onCalculateOfUserCurrency} \r\n            }\r\n            else if (userCurrency === \"EURO\") {\r\n                console.log(action.payload, euroToUsd)\r\n                const onCalculateOfUserCurrency = calculateOfUserCurrency((action.payload*euroToUsd).toFixed(4),\r\n                (action.payload*euroToRub).toFixed(4),\r\n                action.payload, ' ')\r\n                return { onCalculateOfUserCurrency}\r\n            }   \r\n            else {\r\n                const onCalculateOfUserCurrency = calculateOfUserCurrency((action.payload*rubToUsd).toFixed(4),\r\n                (action.payload*rubToEuro).toFixed(4),\r\n                action.payload, ' ')\r\n                return {onCalculateOfUserCurrency} \r\n            }  \r\n        }\r\n        return {\r\n            ...state.calculations,\r\n            ...withCalculateOfUserCurrency(userCurrency).onCalculateOfUserCurrency\r\n        }\r\n    } else {\r\n        return {\r\n            ...state.calculations,\r\n            userSumInputMoney_1: 0,\r\n            userSumInputMoney_2: 0,\r\n            total: 0,\r\n            errorUserWrongInput: 'Введите положительное число'\r\n            } \r\n        }\r\n}\r\n\r\nconst onChangeCurrency = (state, currency) => { \r\n    const  {rubToUsd,euroToRub, usdToEuro, euroToUsd,\r\n        usdToRub,  rubToEuro} = state.currentCurrencies;\r\n        \r\n    const {total} = state.calculations\r\n        // update exchange rates\r\n    const changeCurrency = (exchangeCurrency_1, exchangeCurrency_2,\r\n        exchangeCurrency_1_value,exchangeCurrency_2_value,userSumInputMoney_1,userSumInputMoney_2 ) => {\r\n             return {exchangeCurrency_1, exchangeCurrency_2, exchangeCurrency_1_value,\r\n                exchangeCurrency_2_value,userSumInputMoney_1,  userSumInputMoney_2}\r\n         }\r\n\r\n    const chooseChangeCurrency = () => {\r\n        if (currency.payload === \"USD\") {\r\n            const currentParams =  changeCurrency('EURO', \"RUB\", usdToEuro, usdToRub,\r\n            (total*usdToEuro).toFixed(4),\r\n            (total*usdToRub).toFixed(4)) \r\n            return {currentParams}\r\n        } \r\n        else if (currency.payload === \"EURO\") {\r\n            const currentParams =  changeCurrency('USD', \"RUB\", euroToUsd, euroToRub,\r\n            (total*euroToUsd).toFixed(4),\r\n            (total*euroToRub).toFixed(4))\r\n            return {currentParams}\r\n        }\r\n        else {\r\n            const currentParams =  changeCurrency('USD', \"EUR\", rubToUsd, rubToEuro,\r\n            (total*rubToUsd).toFixed(4),\r\n            (total*rubToEuro).toFixed(4))\r\n            return {currentParams}\r\n            \r\n        }\r\n    }  \r\n    return {\r\n        ...state.calculations,\r\n        userCurrency: currency.payload,\r\n        ...chooseChangeCurrency().currentParams\r\n    }\r\n}\r\n\r\nconst calculateCurrencies = (state, action ) => {\r\n    \r\n    if (state === undefined) {\r\n        return {\r\n            userSumInputMoney_1: '0',\r\n            userSumInputMoney_2: '0',\r\n            total: '0',\r\n            errorUserWrongInput: ' ',\r\n            userCurrency: 'USD',\r\n            exchangeCurrency_1: \"EURO\",\r\n            exchangeCurrency_2: 'RUB',\r\n            exchangeCurrency_1_value: '',\r\n            exchangeCurrency_2_value: '',\r\n            usdToRub:'70',\r\n    }\r\n}\r\n\r\n    switch (action.type) {\r\n        // user input money and calc it on current exchange rate\r\n        case 'SUM_TOTAL':                   \r\n            return calculateUserInputMoney(state, action)\r\n            // user change default currency\r\n                               \r\n        // current currency exchange rates loading firstly or update\r\n        case 'UPDATE_CURRENCY':\r\n            return {\r\n                ...state.currentCurrencies,\r\n                ...action.payload,            \r\n                exchangeCurrency_1_value: action.payload.usdToEuro,\r\n                exchangeCurrency_2_value: action.payload.usdToRub                            \r\n            }\r\n        case 'CHANGE_CURRENCY':           \r\n            return onChangeCurrency(state, action)\r\n\r\n        default: return state.calculations\r\n    }\r\n\r\n}\r\n\r\nexport default calculateCurrencies","const updateCurrentCurrencies = (state , action) => {    \r\n    if (state === undefined) {\r\n        return {                                \r\n                \r\n                usdToEuro:'0',\r\n                euroToRub:'70',\r\n                euroToUsd:'0',\r\n                rubToEuro:'70',\r\n                rubToUsd:'0',  \r\n                ololo:''\r\n            }               \r\n        }\r\n    \r\n\r\n    switch (action.type) {     \r\n \r\n        // spinner while current currency exchange rates loading\r\n        case 'CURRENCIES_REQUESTED':\r\n            return {\r\n                ...state.currentCurrencies,\r\n                default_exchangeCurrency_1_value: 'Загрузка',\r\n                default_exchangeCurrency_2_value: 'Загрузка'\r\n            }\r\n        case 'CURRENCIES_LOADED':\r\n            return {\r\n                ...state.currentCurrencies,\r\n                ...action.payload,\r\n                default_exchangeCurrency_1_value: action.payload.usdToEuro,\r\n                default_exchangeCurrency_2_value: action.payload.usdToRub\r\n            }\r\n        case 'HIDE_DEFAULT_CURRENCIES':\r\n            \r\n            return {\r\n                ...state.currentCurrencies,\r\n                default_exchangeCurrency_1_value: action.payload,\r\n                default_exchangeCurrency_2_value: action.payload\r\n            }\r\n        default: return state.currentCurrencies\r\n    }\r\n}\r\n\r\n\r\nexport default updateCurrentCurrencies","import calculateCurrencies from \"./calcilateMoney\";\r\nimport updateCurrentCurrencies from \"./currentCurrencies\"\r\n\r\n\r\nconst reducer = (state, action) => {\r\n    return {\r\n        currentCurrencies: updateCurrentCurrencies(state , action),\r\n        calculations: calculateCurrencies(state, action)\r\n    }\r\n}\r\nexport default reducer;\r\n","import reducer from \"./reducers\";\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nconst logMiddleware = ({ getState } ) => (next) => (action) => {\r\n \r\n    return next(action);\r\n} \r\n\r\nconst stringMiddleware = () => (next) => (action) => {\r\n    if (typeof action === 'string') {\r\n        return next({\r\n            type: action\r\n        });\r\n    }\r\n    return next(action);\r\n}\r\n\r\nconst store = createStore(reducer, applyMiddleware( thunkMiddleware, stringMiddleware, logMiddleware));\r\n\r\nconst delayedActionCreator = (timeout) => (dispatch) => {\r\n    setTimeout(() => dispatch({\r\n        type: 'DELATED_ACTION'\r\n    }), 2000);\r\n}\r\nstore.dispatch(delayedActionCreator(3000));\r\n\r\nexport default store","export default class CurrencyService {\r\n    apiBase = 'https://www.cbr-xml-daily.ru/daily_json.js'\r\n\r\n    async getCurrency() {\r\n\r\n      const res = await fetch(this.apiBase);\r\n          \r\n      if (!res.ok) {\r\n          // eslint-disable-next-line no-useless-concat\r\n          throw new Error (`Could not fetch ${this.apiBase}` + ` , received ${res.status}`)\r\n        }return res.json()\r\n\r\n    }\r\n\r\n    getCurrencies = async () => {\r\n        const res = await this.getCurrency()\r\n        const usdToRub= res.Valute.USD.Value.toFixed(4);\r\n        const euroToRub = res.Valute.EUR.Value.toFixed(4);\r\n        const valutes = {\r\n          usdToRub: usdToRub,\r\n          euroToRub: euroToRub,\r\n          usdToEuro: (usdToRub/euroToRub).toFixed(4),\r\n          euroToUsd: (euroToRub/usdToRub).toFixed(4),\r\n          rubToEuro: (1/euroToRub).toFixed(4),\r\n          rubToUsd: (1/usdToRub).toFixed(4)          \r\n        }\r\n        return valutes\r\n      }\r\n\r\n \r\n}","import CurrencyService from \"./currency-service\";\r\n\r\nexport default CurrencyService","import React, { Component } from \"react\";\r\n\r\nexport default class ErrorBoundry extends Component {\r\n\r\n    state ={\r\n        hasError: false\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({\r\n            hasError: true\r\n        })\r\n    }\r\n\r\n    render () {\r\n        const error = this.state.hasError;\r\n\r\n        if (error) {\r\n            return <h2>Error</h2>;\r\n        }\r\n\r\n        return this.props.children;\r\n    \r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app';\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router} from \"react-router-dom\";\r\nimport store from './store';\r\nimport CurrencyService from './services';\r\nimport { CurrencyServiceProvider } from './components/currency-service-context';\r\nimport ErrorBoundry from './error-boundry/error-boundry';\r\n\r\nconst currencyService = new CurrencyService();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ErrorBoundry>\r\n      <CurrencyServiceProvider value={currencyService}>\r\n        <Router>\r\n          <App />\r\n        </Router>\r\n      </CurrencyServiceProvider>\r\n    </ErrorBoundry>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}