{"version":3,"sources":["components/header/index.js","components/header/header.js","reducers/currentCurrencies.js","reducers/index.js","store.js","components/currency-list/currency-list.js","actions/index.js","components/pages/homepage.js","components/pages/current-curency.js","components/user-currency/user-currency.js","components/user-currency/index.js","services/currency-service.js","services/index.js","app.js","index.js"],"names":["Header","className","to","updateCurrentCurrencies","state","action","undefined","currentUsdToRub","currentUsdToEuro","currentEuroToRub","currentEurotoUsd","currentRubToEuro","currentRubToUsd","userSumInputMoney_1","userSumInputMoney_2","userCurrency","exchangeCurrency_1","exchangeCurrency_2","total","type","currentCurrencies","currentEuroToUsd","payload","calculateUserInputMoney","currency","onChangeCurrency","reducer","store","createStore","CurrencyList","sumTotalUsd","userSumInputMoney","Form","Group","Label","Control","onChange","event","item","target","value","id","placeholder","CurrencyListContainer","this","props","Component","connect","dispatch","sumTotal","HomePage","currency1","currency2","UserCurrency","userChangeCurrency","Select","UserCurrencyContainer","changeCurrency","CurrencyService","apiBase","getCurrencies","a","getCurrency","res","valutes","Valute","USD","Value","EUR","url","fetch","ok","Error","status","json","App","currencyService","loadingCurrentCurrency","then","onLoadCurrentCurrency","catch","path","element","updateCurrency","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.561bacfd.chunk.js","sourcesContent":["import Header from \"./header\";\r\n\r\nexport default Header","import { React } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./header.css\"\r\nconst Header = () => {    \r\n    return (\r\n        <header className=\"header\">  \r\n            <h3 className=\"header__h3\">          \r\n                <Link className=\"header__a\" to=\"/\">Конвертер валют</Link>\r\n            </h3>\r\n            <div className=\"header__container\">\r\n                <Link  className=\"header__a\" to=\"/\">Главная</Link>\r\n                <Link  className=\"header__a\" to=\"/current-exchange-rate/\">Курс валют</Link>    \r\n            </div>                 \r\n        </header>\r\n        \r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default Header\r\n\r\n","const onChangeCurrency = (state, currency) => {   \r\n    if (currency.payload === \"USD\") {\r\n        return {\r\n            ...state.currentCurrencies,\r\n            userCurrency: currency.payload,\r\n            exchangeCurrency_1: 'EURO',\r\n            exchangeCurrency_2: \"RUB\",\r\n            userSumInputMoney_1: state.currentCurrencies.total*state.currentCurrencies.currentUsdToEuro,\r\n            userSumInputMoney_2: state.currentCurrencies.total*state.currentCurrencies.currentUsdToRub\r\n            \r\n        }\r\n    } \r\n    else if (currency.payload === \"EURO\") {\r\n        return {\r\n            ...state.currentCurrencies,\r\n            userCurrency: currency.payload,\r\n            exchangeCurrency_1: 'USD',\r\n            exchangeCurrency_2: \"RUB\",\r\n            userSumInputMoney_1: state.currentCurrencies.total*state.currentCurrencies.currentEuroToUsd,\r\n            userSumInputMoney_2: state.currentCurrencies.total*state.currentCurrencies.currentEuroToRub\r\n        }\r\n    }\r\n    else {\r\n        return {\r\n            ...state.currentCurrencies,\r\n            userCurrency: currency.payload,\r\n            exchangeCurrency_1: 'USD',\r\n            exchangeCurrency_2: \"EUR\",\r\n            userSumInputMoney_1: state.currentCurrencies.total*state.currentCurrencies.currentRubToUsd,\r\n            userSumInputMoney_2: state.currentCurrencies.total*state.currentCurrencies.currentRubToEuro\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nconst calculateUserInputMoney = (state, action) => {\r\n    const {userCurrency, currentUsdToRub, currentUsdToEuro, currentEuroToRub,\r\n         currentEuroToUsd, currentRubToEuro, currentRubToUsd} = state.currentCurrencies\r\n  \r\n    if (userCurrency === \"USD\")    {\r\n        return {\r\n            ...state.currentCurrencies,\r\n            userSumInputMoney_1: action.payload*currentUsdToEuro,\r\n            userSumInputMoney_2: action.payload*currentUsdToRub,\r\n            total:action.payload\r\n        } \r\n    }\r\n    else if (userCurrency === \"EURO\") {\r\n        return {\r\n            ...state.currentCurrencies,\r\n            userSumInputMoney_1: action.payload*currentEuroToUsd,\r\n            userSumInputMoney_2: action.payload*currentEuroToRub,\r\n            total: action.payload\r\n        }\r\n    }   \r\n    else {\r\n        return {\r\n            ...state.currentCurrencies,\r\n            userSumInputMoney_1: action.payload*currentRubToUsd,\r\n            userSumInputMoney_2: action.payload*currentRubToEuro,\r\n            total: action.payload\r\n        } \r\n    }  \r\n}\r\n\r\n\r\nconst updateCurrentCurrencies = (state , action) => {\r\n    \r\n    if (state === undefined) {\r\n        return {\r\n                currentUsdToRub:'70',\r\n                currentUsdToEuro:'0',\r\n                currentEuroToRub:'70',\r\n                currentEurotoUsd:'0',\r\n                currentRubToEuro:'70',\r\n                currentRubToUsd:'0',                \r\n                userSumInputMoney_1: '0',\r\n                userSumInputMoney_2: '0',\r\n                userCurrency: 'USD',\r\n                exchangeCurrency_1: \"EURO\",\r\n                exchangeCurrency_2: 'RUB',\r\n                total: '0'\r\n        }\r\n    }\r\n \r\n\r\n    switch (action.type) {\r\n        case 'SUM_TOTAL':                   \r\n            return calculateUserInputMoney(state, action)\r\n\r\n        case 'CHANGE_CURRENCY':           \r\n            return onChangeCurrency(state, action)\r\n            \r\n\r\n        case 'UPDATE_CURRENCY':\r\n            const {currentUsdToRub, currentEuroToRub} = action.payload;\r\n            const currentUsdToEuro = currentUsdToRub/currentEuroToRub;\r\n            const currentEuroToUsd = currentEuroToRub/currentUsdToRub;          \r\n            const currentRubToEuro = 1/currentEuroToRub;\r\n            const currentRubToUsd = 1/currentUsdToRub;\r\n            return {\r\n                ...state.currentCurrencies,\r\n                currentUsdToRub, currentUsdToEuro, currentEuroToRub,\r\n                currentEuroToUsd, currentRubToEuro, currentRubToUsd                              \r\n            }\r\n        default: return state.currentCurrencies\r\n    }\r\n}\r\n\r\n\r\nexport default updateCurrentCurrencies","import updateCurrentCurrencies from \"./currentCurrencies\"\r\n\r\n\r\nconst reducer = (state, action) => {\r\n    return {\r\n        currentCurrencies: updateCurrentCurrencies(state , action)\r\n    }\r\n}\r\nexport default reducer;\r\n","import reducer from \"./reducers\";\r\nimport {createStore} from 'redux';\r\nconst store = createStore(reducer);\r\n\r\nexport default store","import {React, Component} from \"react\";\r\nimport { Form} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport './currency-list.css';\r\nimport { sumTotal } from \"../../actions\";\r\nimport store from \"../../store\";\r\n\r\n\r\nconst CurrencyList = ( {sumTotalUsd, userSumInputMoney, userCurrency, exchangeCurrency_1, exchangeCurrency_2, userSumInputMoney_1, userSumInputMoney_2}) => {     \r\n       \r\n    const insertTotal = (event) => {       \r\n        const item =event.target.value;\r\n        \r\n        return sumTotalUsd(item)\r\n    }\r\n    return (     \r\n        <div className=\"currency-list\">\r\n            <div className=\"form\" >\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Количество</Form.Label>                   \r\n                    <Form.Control\r\n                    onChange={insertTotal} id=\"1\" type=\"number\" placeholder=\"Введите количество\" />\r\n                   \r\n                </Form.Group>\r\n            <p className=\"result-block\">{userCurrency} in {exchangeCurrency_1}:</p>\r\n            <p className=\"result-field\">{userSumInputMoney_1}</p>                \r\n            </div>\r\n            <p className=\"result-block\">{userCurrency} in {exchangeCurrency_2}:</p>\r\n            <p className=\"result-field\">{userSumInputMoney_2}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nclass CurrencyListContainer extends Component {      \r\n   \r\n    render () {   \r\n     \r\n        const {sumTotalUsd,  userCurrency, exchangeCurrency_1, exchangeCurrency_2, userSumInputMoney_1, userSumInputMoney_2} = this.props\r\n       \r\n        return (                \r\n                <CurrencyList sumTotalUsd={sumTotalUsd} \r\n                exchangeCurrency_1={exchangeCurrency_1} exchangeCurrency_2={exchangeCurrency_2} userCurrency={userCurrency}\r\n                userSumInputMoney_1={userSumInputMoney_1} userSumInputMoney_2={userSumInputMoney_2}/>           \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({currentCurrencies: {userSumInputMoney_1, userSumInputMoney_2, userCurrency, exchangeCurrency_1\r\n, exchangeCurrency_2}}) => {\r\n    \r\n    return {userSumInputMoney_1, userSumInputMoney_2, userCurrency, exchangeCurrency_1, exchangeCurrency_2}\r\n} \r\n\r\nconst mapDispatchToProps = (dispatch, action) => {\r\n    return {\r\n        sumTotalUsd: (item) => dispatch(sumTotal(item))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrencyListContainer)","const sumTotal = (item) => {\r\n    return {\r\n        type: 'SUM_TOTAL',\r\n        payload: item\r\n    }\r\n}\r\n\r\nconst changeCurrency = (item) => {\r\n    return {\r\n        type: 'CHANGE_CURRENCY',\r\n        payload: item\r\n    }\r\n}\r\n\r\nconst updateCurrency = (item) => {\r\n   \r\n    return {\r\n        type: 'UPDATE_CURRENCY',\r\n        payload: item\r\n    }\r\n}\r\n\r\nexport {sumTotal, changeCurrency, updateCurrency}","import {React, Fragment } from \"react\";\r\nimport CurrencyListContainer from \"../currency-list/currency-list\";\r\n\r\nconst HomePage = () => {\r\n    \r\n    return (\r\n        <Fragment>\r\n            <CurrencyListContainer />\r\n        </Fragment>  \r\n    )\r\n    \r\n}\r\nexport default HomePage","import {React, Fragment } from \"react\";\r\nimport \"./pages.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst CurrentCurrencies = ({currency1, currency2, exchangeCurrency_1, exchangeCurrency_2 }) => {\r\n   \r\n    return (\r\n        <Fragment >\r\n            <h3 className=\"pages pages__h3\">Актуальный курс валют:</h3>\r\n            <div className=\"pages__currency-window\">\r\n                <p className=\"pages__currency-window_p\">{exchangeCurrency_1}:</p>\r\n                <p className=\"pages__currency-window_p\">{currency1}</p>                \r\n            </div>\r\n            <div className=\"pages__currency-window\">\r\n                <p className=\"pages__currency-window_p\">{exchangeCurrency_2}:</p>\r\n                <p className=\"pages__currency-window_p\">{currency2}</p>\r\n            </div>\r\n        </Fragment>  \r\n    )   \r\n}\r\n\r\nconst mapStateToProps = ({currentCurrencies: {currentUsdToRub, currentUsdToEuro, currentEuroToRub,\r\n    currentEuroToUsd, currentRubToEuro, currentRubToUsd, userCurrency,exchangeCurrency_1,exchangeCurrency_2}}) => {\r\n        switch(userCurrency) {\r\n            case 'USD':\r\n                return {\r\n                    exchangeCurrency_1,\r\n                    exchangeCurrency_2,\r\n                    currency1 : currentUsdToEuro,\r\n                    currency2 : currentUsdToRub\r\n                }\r\n            case 'EURO' : \r\n                return {\r\n                    exchangeCurrency_1,\r\n                    exchangeCurrency_2,\r\n                    currency1 : currentEuroToUsd,\r\n                    currency2 : currentEuroToRub\r\n                }\r\n            case 'RUB' :\r\n                return {\r\n                    exchangeCurrency_1,\r\n                    exchangeCurrency_2,\r\n                    currency1 : currentRubToUsd,\r\n                    currency2 : currentRubToEuro\r\n                }\r\n            default:\r\n                return null\r\n        }\r\n  \r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(CurrentCurrencies)","import {React, Component} from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeCurrency} from \"../../actions\";\r\n\r\n\r\n\r\n const UserCurrency = ({userChangeCurrency}) => {     \r\n    const onUserChangeCurrency = (event) => {\r\n        const item = event.target.value;        \r\n        return userChangeCurrency(item)\r\n    }\r\n        return (\r\n          <div className=\"currency-list currency-list-user\">\r\n            <p className=\"currency-list-_p\" >Ваша валюта:</p>\r\n            <Form.Select\r\n            onChange = {onUserChangeCurrency} aria-label=\"Default select example\">\r\n              \r\n                <option value=\"USD\">USD</option>\r\n                <option value=\"EURO\">EURO</option>\r\n                <option value=\"RUB\">RUB</option>\r\n            </Form.Select>\r\n          </div>\r\n        )\r\n   }\r\n\r\n\r\nclass UserCurrencyContainer extends Component  {\r\n    \r\n    render () {\r\n        const {userChangeCurrency} = this.props\r\n        return (\r\n        <UserCurrency userChangeCurrency={userChangeCurrency}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({userChangeCurrency}) => {\r\n    return {userChangeCurrency}\r\n} \r\n\r\nconst mapDispatchToProps = (dispatch, action) => {\r\n    return {       \r\n        userChangeCurrency: (item) => dispatch(changeCurrency(item))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserCurrencyContainer)\r\n","import UserCurrency from \"./user-currency\";\r\n\r\nexport default UserCurrency","export default class CurrencyService {\r\n    apiBase = 'https://www.cbr-xml-daily.ru/daily_json.js'\r\n\r\n    async getCurrency(url) {\r\n\r\n    const res = await fetch(this.apiBase);\r\n        \r\n    if (!res.ok) {\r\n        // eslint-disable-next-line no-useless-concat\r\n        throw new Error (`Could not fetch ${this.apiBase}` + ` , received ${res.status}`)\r\n      }\r\n      \r\n\r\n    return res.json()\r\n\r\n    }\r\n\r\n    getCurrencies = async () => {\r\n        const res = await this.getCurrency()\r\n        const valutes = {\r\n          currentUsdToRub:res.Valute.USD.Value,\r\n          currentEuroToRub: res.Valute.EUR.Value\r\n        }\r\n       \r\n        return valutes\r\n      }\r\n\r\n \r\n    }","import CurrencyService from \"./currency-service\";\r\n\r\nexport default CurrencyService","import {React, Component} from \"react\";\r\nimport Header from \"./components/header\";\r\nimport {HomePage, CurrentCurrencies} from \"./components/pages\";\r\nimport UserCurrencyContainer from \"./components/user-currency\"\r\nimport CurrencyService from \"./services\";\r\nimport {updateCurrency} from \"./actions\";\r\nimport {connect} from 'react-redux'\r\nimport { Routes, Route } from \"react-router\";\r\n\r\nclass App extends Component  {\r\n  currencyService = new CurrencyService()\r\n\r\n\r\n  loadingCurrentCurrency = () => {\r\n    this.currencyService\r\n    .getCurrencies()\r\n    .then(this.props.onLoadCurrentCurrency)\r\n    .catch()\r\n  }\r\n\r\n componentDidMount(){\r\n   this.loadingCurrentCurrency()\r\n }\r\n\r\n  render () \r\n  {\r\n    return (\r\n      <div className=\"App\">        \r\n          <Header />\r\n          <UserCurrencyContainer />\r\n          <Routes>\r\n            <Route path=\"/spa-app-currency-conversion/\" element={<HomePage />} />\r\n            <Route path=\"/*\" element={<HomePage />} />\r\n            <Route path=\"/current-exchange-rate/\" element={<CurrentCurrencies />} />  \r\n          </Routes>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return state\r\n} \r\n\r\nconst mapDispatchToProps = (dispatch, action) => {\r\n  return {\r\n    onLoadCurrentCurrency: (item) => dispatch(updateCurrency(item))\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app';\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router} from \"react-router-dom\";\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}