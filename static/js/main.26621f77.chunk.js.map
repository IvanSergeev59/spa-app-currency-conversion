{"version":3,"sources":["components/header/index.js","components/header/header.js","components/currency-list/currency-list.js","actions/index.js","components/pages/homepage.js","components/pages/current-curency.js","components/user-currency/user-currency.js","components/user-currency/index.js","services/currency-service.js","services/index.js","app.js","reducers/currentCurrencies.js","reducers/index.js","store.js","index.js"],"names":["Header","className","to","CurrencyList","sumTotalUsd","errorUserWrongInput","userCurrency","userSumInputMoney","exchangeCurrency_1","exchangeCurrency_2","userSumInputMoney_1","userSumInputMoney_2","Form","Group","Label","Control","onChange","event","item","target","value","id","type","placeholder","CurrencyListContainer","this","props","Component","connect","currentCurrencies","dispatch","action","payload","sumTotal","HomePage","currentUsdToRub","currentUsdToEuro","currentEuroToRub","currentEuroToUsd","currentRubToEuro","currentRubToUsd","currency1","currency2","UserCurrency","userChangeCurrency","Select","UserCurrencyContainer","changeCurrency","CurrencyService","apiBase","getCurrencies","a","getCurrency","res","valutes","Valute","USD","Value","EUR","console","log","url","fetch","ok","Error","status","json","App","currencyService","loadingCurrentCurrency","then","onLoadCurrentCurrency","catch","path","element","state","updateCurrency","updateCurrentCurrencies","undefined","currentEurotoUsd","total","test","toFixed","calculateUserInputMoney","currency","onChangeCurrency","reducer","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26621f77.chunk.js","sourcesContent":["import Header from \"./header\";\r\n\r\nexport default Header","import { React } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./header.css\"\r\nconst Header = () => {    \r\n    return (\r\n        <header className=\"header\">  \r\n            <h3 className=\"header__h3\">          \r\n                <Link className=\"header__a\" to=\"/\">Конвертер валют</Link>\r\n            </h3>\r\n            <div className=\"header__container\">\r\n                <Link  className=\"header__a\" to=\"/\">Главная</Link>\r\n                <Link  className=\"header__a\" to=\"/current-exchange-rate/\">Курс валют</Link>    \r\n            </div>                 \r\n        </header>\r\n        \r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default Header\r\n\r\n","import {React, Component} from \"react\";\r\nimport { Form} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport './currency-list.css';\r\nimport { sumTotal } from \"../../actions\";\r\n\r\n\r\nconst CurrencyList = ( {sumTotalUsd, errorUserWrongInput, userSumInputMoney, userCurrency, exchangeCurrency_1, exchangeCurrency_2, userSumInputMoney_1, userSumInputMoney_2}) => {     \r\n       \r\n    const insertTotal = (event) => {       \r\n        const item =event.target.value;\r\n        \r\n        return sumTotalUsd(item)\r\n    }\r\n    return (     \r\n        <div className=\"currency-list\">\r\n            <div className=\"form\" >\r\n                <Form.Group className=\"currency-list-margin\">\r\n                    <Form.Label>Количество</Form.Label>                   \r\n                    <Form.Control\r\n                    onChange={insertTotal} id=\"only_num\" type=\"number\" placeholder=\"Введите количество\" />\r\n                   \r\n                </Form.Group>\r\n            <p className=\"currency-list__error\">{errorUserWrongInput}</p>\r\n            <p className=\"result-block\">{userCurrency} in {exchangeCurrency_1}:</p>\r\n            <p className=\"result-field\">{userSumInputMoney_1}</p>                \r\n            </div>\r\n            <p className=\"result-block\">{userCurrency} in {exchangeCurrency_2}:</p>\r\n            <p className=\"result-field\">{userSumInputMoney_2}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nclass CurrencyListContainer extends Component {      \r\n   \r\n    render () {   \r\n     \r\n        const {sumTotalUsd,  userCurrency, exchangeCurrency_1, exchangeCurrency_2, userSumInputMoney_1, errorUserWrongInput, userSumInputMoney_2} = this.props\r\n       \r\n        return (                \r\n                <CurrencyList sumTotalUsd={sumTotalUsd} errorUserWrongInput={errorUserWrongInput}\r\n                exchangeCurrency_1={exchangeCurrency_1} exchangeCurrency_2={exchangeCurrency_2} userCurrency={userCurrency}\r\n                userSumInputMoney_1={userSumInputMoney_1} userSumInputMoney_2={userSumInputMoney_2}/>           \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({currentCurrencies: {errorUserWrongInput, userSumInputMoney_1, userSumInputMoney_2, userCurrency, exchangeCurrency_1\r\n, exchangeCurrency_2}}) => {\r\n    \r\n    return {userSumInputMoney_1, userSumInputMoney_2, errorUserWrongInput, userCurrency, exchangeCurrency_1, exchangeCurrency_2}\r\n} \r\n\r\nconst mapDispatchToProps = (dispatch, action) => {\r\n    return {\r\n        sumTotalUsd: (item) => dispatch(sumTotal(item))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrencyListContainer)","const sumTotal = (item) => {\r\n    return {\r\n        type: 'SUM_TOTAL',\r\n        payload: item\r\n    }\r\n}\r\n\r\nconst changeCurrency = (item) => {\r\n    return {\r\n        type: 'CHANGE_CURRENCY',\r\n        payload: item\r\n    }\r\n}\r\n\r\nconst updateCurrency = (item) => {\r\n   \r\n    return {\r\n        type: 'UPDATE_CURRENCY',\r\n        payload: item\r\n    }\r\n}\r\n\r\nexport {sumTotal, changeCurrency, updateCurrency}","import {React, Fragment } from \"react\";\r\nimport CurrencyListContainer from \"../currency-list/currency-list\";\r\n\r\nconst HomePage = () => {\r\n    \r\n    return (\r\n        <Fragment>\r\n            <CurrencyListContainer />\r\n        </Fragment>  \r\n    )\r\n    \r\n}\r\nexport default HomePage","import {React, Fragment } from \"react\";\r\nimport \"./pages.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst CurrentCurrencies = ({currency1, currency2, exchangeCurrency_1, exchangeCurrency_2 }) => {\r\n   \r\n    return (\r\n        <Fragment >\r\n            <h3 className=\"pages pages__h3\">Актуальный курс валют:</h3>\r\n            <div className=\"pages__currency-window\">\r\n                <p className=\"pages__currency-window_p\">{exchangeCurrency_1}:</p>\r\n                <p className=\"pages__currency-window_p\">{currency1}</p>                \r\n            </div>\r\n            <div className=\"pages__currency-window\">\r\n                <p className=\"pages__currency-window_p\">{exchangeCurrency_2}:</p>\r\n                <p className=\"pages__currency-window_p\">{currency2}</p>\r\n            </div>\r\n        </Fragment>  \r\n    )   \r\n}\r\n\r\nconst mapStateToProps = ({currentCurrencies: {currentUsdToRub, currentUsdToEuro, currentEuroToRub,\r\n    currentEuroToUsd, currentRubToEuro, currentRubToUsd, userCurrency,exchangeCurrency_1,exchangeCurrency_2}}) => {\r\n        switch(userCurrency) {\r\n            case 'USD':\r\n                return {\r\n                    exchangeCurrency_1,\r\n                    exchangeCurrency_2,\r\n                    currency1 : currentUsdToEuro,\r\n                    currency2 : currentUsdToRub\r\n                }\r\n            case 'EURO' : \r\n                return {\r\n                    exchangeCurrency_1,\r\n                    exchangeCurrency_2,\r\n                    currency1 : currentEuroToUsd,\r\n                    currency2 : currentEuroToRub\r\n                }\r\n            case 'RUB' :\r\n                return {\r\n                    exchangeCurrency_1,\r\n                    exchangeCurrency_2,\r\n                    currency1 : currentRubToUsd,\r\n                    currency2 : currentRubToEuro\r\n                }\r\n            default:\r\n                return null\r\n        }\r\n  \r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(CurrentCurrencies)","import {React, Component} from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeCurrency} from \"../../actions\";\r\n\r\n\r\n\r\n const UserCurrency = ({userChangeCurrency}) => {     \r\n    const onUserChangeCurrency = (event) => {\r\n        const item = event.target.value;        \r\n        return userChangeCurrency(item)\r\n    }\r\n        return (\r\n          <div className=\"currency-list currency-list-user\">\r\n            <p className=\"currency-list-_p\" >Ваша валюта:</p>\r\n            <Form.Select\r\n            onChange = {onUserChangeCurrency} aria-label=\"Default select example\">\r\n              \r\n                <option value=\"USD\">USD</option>\r\n                <option value=\"EURO\">EURO</option>\r\n                <option value=\"RUB\">RUB</option>\r\n            </Form.Select>\r\n          </div>\r\n        )\r\n   }\r\n\r\n\r\nclass UserCurrencyContainer extends Component  {\r\n    \r\n    render () {\r\n        const {userChangeCurrency} = this.props\r\n        return (\r\n        <UserCurrency userChangeCurrency={userChangeCurrency}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({userChangeCurrency}) => {\r\n    return {userChangeCurrency}\r\n} \r\n\r\nconst mapDispatchToProps = (dispatch, action) => {\r\n    return {       \r\n        userChangeCurrency: (item) => dispatch(changeCurrency(item))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserCurrencyContainer)\r\n","import UserCurrency from \"./user-currency\";\r\n\r\nexport default UserCurrency","export default class CurrencyService {\r\n    apiBase = 'https://www.cbr-xml-daily.ru/daily_json.js'\r\n\r\n    async getCurrency(url) {\r\n\r\n    const res = await fetch(this.apiBase);\r\n        \r\n    if (!res.ok) {\r\n        // eslint-disable-next-line no-useless-concat\r\n        throw new Error (`Could not fetch ${this.apiBase}` + ` , received ${res.status}`)\r\n      }\r\n      \r\n\r\n    return res.json()\r\n\r\n    }\r\n\r\n    getCurrencies = async () => {\r\n        const res = await this.getCurrency()\r\n        const valutes = {\r\n          currentUsdToRub: res.Valute.USD.Value,\r\n          currentEuroToRub: res.Valute.EUR.Value\r\n        }\r\n       console.log(valutes)\r\n        return valutes\r\n      }\r\n\r\n \r\n    }","import CurrencyService from \"./currency-service\";\r\n\r\nexport default CurrencyService","import {React, Component} from \"react\";\r\nimport Header from \"./components/header\";\r\nimport {HomePage, CurrentCurrencies} from \"./components/pages\";\r\nimport UserCurrencyContainer from \"./components/user-currency\"\r\nimport CurrencyService from \"./services\";\r\nimport {updateCurrency} from \"./actions\";\r\nimport {connect} from 'react-redux'\r\nimport { Routes, Route } from \"react-router\";\r\n\r\nclass App extends Component  {\r\n  currencyService = new CurrencyService()\r\n\r\n\r\n  loadingCurrentCurrency = () => {\r\n    this.currencyService\r\n    .getCurrencies()\r\n    .then(this.props.onLoadCurrentCurrency)\r\n    .catch()\r\n  }\r\n\r\n componentDidMount(){\r\n   this.loadingCurrentCurrency()\r\n }\r\n\r\n  render () \r\n  {\r\n    return (\r\n      <div className=\"App\">        \r\n          <Header />\r\n          <UserCurrencyContainer />\r\n          <Routes>\r\n            <Route path=\"/spa-app-currency-conversion/\" element={<HomePage />} />\r\n            <Route path=\"/*\" element={<HomePage />} />\r\n            <Route path=\"/current-exchange-rate/\" element={<CurrentCurrencies />} />  \r\n          </Routes>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return state\r\n} \r\n\r\nconst mapDispatchToProps = (dispatch, action) => {\r\n  return {\r\n    onLoadCurrentCurrency: (item) => dispatch(updateCurrency(item))\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","const onChangeCurrency = (state, currency) => {   \r\n    if (currency.payload === \"USD\") {\r\n        return {\r\n            ...state.currentCurrencies,\r\n            userCurrency: currency.payload,\r\n            exchangeCurrency_1: 'EURO',\r\n            exchangeCurrency_2: \"RUB\",\r\n            userSumInputMoney_1: (state.currentCurrencies.total*state.currentCurrencies.currentUsdToEuro).toFixed(4),\r\n            userSumInputMoney_2: (state.currentCurrencies.total*state.currentCurrencies.currentUsdToRub).toFixed(4)\r\n            \r\n        }\r\n    } \r\n    else if (currency.payload === \"EURO\") {\r\n        return {\r\n            ...state.currentCurrencies,\r\n            userCurrency: currency.payload,\r\n            exchangeCurrency_1: 'USD',\r\n            exchangeCurrency_2: \"RUB\",\r\n            userSumInputMoney_1: (state.currentCurrencies.total*state.currentCurrencies.currentEuroToUsd).toFixed(4),\r\n            userSumInputMoney_2: (state.currentCurrencies.total*state.currentCurrencies.currentEuroToRub).toFixed(4)\r\n        }\r\n    }\r\n    else {\r\n        return {\r\n            ...state.currentCurrencies,\r\n            userCurrency: currency.payload,\r\n            exchangeCurrency_1: 'USD',\r\n            exchangeCurrency_2: \"EUR\",\r\n            userSumInputMoney_1: (state.currentCurrencies.total*state.currentCurrencies.currentRubToUsd).toFixed(4),\r\n            userSumInputMoney_2: (state.currentCurrencies.total*state.currentCurrencies.currentRubToEuro).toFixed(4)\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nconst calculateUserInputMoney = (state, action) => {\r\n    const {userCurrency, currentUsdToRub, currentUsdToEuro, currentEuroToRub,\r\n         currentEuroToUsd, currentRubToEuro, currentRubToUsd} = state.currentCurrencies\r\n    if (/^(0|[1-9]\\d*)$/.test(action.payload) & (action.payload >=0)) {    \r\n        if (userCurrency === \"USD\")    {\r\n            return {\r\n                ...state.currentCurrencies,\r\n                userSumInputMoney_1: (action.payload*currentUsdToEuro).toFixed(4),\r\n                userSumInputMoney_2: (action.payload*currentUsdToRub).toFixed(4),\r\n                total:action.payload,\r\n                errorUserWrongInput: ' '\r\n            } \r\n        }\r\n        else if (userCurrency === \"EURO\") {\r\n            return {\r\n                ...state.currentCurrencies,\r\n                userSumInputMoney_1: (action.payload*currentEuroToUsd).toFixed(4),\r\n                userSumInputMoney_2: (action.payload*currentEuroToRub).toFixed(4),\r\n                total: action.payload,\r\n                errorUserWrongInput: ' '\r\n            }\r\n        }   \r\n        else {\r\n            return {\r\n                ...state.currentCurrencies,\r\n                userSumInputMoney_1: (action.payload*currentRubToUsd).toFixed(4),\r\n                userSumInputMoney_2: (action.payload*currentRubToEuro).toFixed(4),\r\n                total: action.payload,\r\n                errorUserWrongInput: ' '\r\n            } \r\n        }  \r\n    } else {\r\n        return {\r\n            ...state.currentCurrencies,\r\n            userSumInputMoney_1: 0,\r\n            userSumInputMoney_2: 0,\r\n            total: 0,\r\n            errorUserWrongInput: 'Неверное значение'\r\n            } \r\n        }\r\n}\r\n\r\n\r\n\r\nconst updateCurrentCurrencies = (state , action) => {\r\n    \r\n    if (state === undefined) {\r\n        return {\r\n                currentUsdToRub:'70',\r\n                currentUsdToEuro:'0',\r\n                currentEuroToRub:'70',\r\n                currentEurotoUsd:'0',\r\n                currentRubToEuro:'70',\r\n                currentRubToUsd:'0',                \r\n                userSumInputMoney_1: '0',\r\n                userSumInputMoney_2: '0',\r\n                userCurrency: 'USD',\r\n                exchangeCurrency_1: \"EURO\",\r\n                exchangeCurrency_2: 'RUB',\r\n                total: '0',\r\n                errorUserWrongInput: ' '\r\n        }\r\n    }\r\n \r\n\r\n    switch (action.type) {\r\n        case 'SUM_TOTAL':                   \r\n            return calculateUserInputMoney(state, action)\r\n\r\n        case 'CHANGE_CURRENCY':           \r\n            return onChangeCurrency(state, action)\r\n            \r\n\r\n        case 'UPDATE_CURRENCY':\r\n            const {currentUsdToRub, currentEuroToRub} = action.payload;\r\n            const currentUsdToEuro = (currentUsdToRub/currentEuroToRub).toFixed(5);\r\n            const currentEuroToUsd = (currentEuroToRub/currentUsdToRub).toFixed(4);          \r\n            const currentRubToEuro = (1/currentEuroToRub).toFixed(4);\r\n            const currentRubToUsd = (1/currentUsdToRub).toFixed(4);\r\n            return {\r\n                ...state.currentCurrencies,\r\n                currentUsdToRub, currentUsdToEuro, currentEuroToRub,\r\n                currentEuroToUsd, currentRubToEuro, currentRubToUsd                              \r\n            }\r\n        default: return state.currentCurrencies\r\n    }\r\n}\r\n\r\n\r\nexport default updateCurrentCurrencies","import updateCurrentCurrencies from \"./currentCurrencies\"\r\n\r\n\r\nconst reducer = (state, action) => {\r\n    return {\r\n        currentCurrencies: updateCurrentCurrencies(state , action)\r\n    }\r\n}\r\nexport default reducer;\r\n","import reducer from \"./reducers\";\r\nimport {createStore} from 'redux';\r\nconst store = createStore(reducer);\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app';\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router} from \"react-router-dom\";\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}