{"version":3,"sources":["components/header/index.js","components/header/header.js","components/currency-list/currency-list.js","actions/index.js","components/pages/homepage.js","components/pages/current-curency.js","components/user-currency/user-currency.js","components/user-currency/index.js","services/currency-service.js","services/index.js","app.js","reducers/currentCurrencies.js","reducers/index.js","store.js","index.js"],"names":["Header","className","Navbar","bg","variant","Container","Brand","href","Nav","Link","CurrencyList","currentUsd","totalUsd","sumTotalUsd","sumUsd","userCurrency","Form","Group","controlId","Label","Control","onChange","event","item","target","value","type","placeholder","required","pattern","CurrencyListContainer","this","props","Component","connect","currentCurrencies","currentRUB","currentEURO","toFixed","dispatch","action","payload","sumTotal","HomePage","currentUsdToRub","currentUsdToEuro","currentEuroToRub","currentEuroToUsd","currentRubToEuro","currentRubToUsd","exchangeCurrency_1","exchangeCurrency_2","currency1","currency2","UserCurrency","userChangeCurrency","Select","UserCurrencyContainer","changeCurrency","CurrencyService","apiBase","getCurrencies","a","getCurrency","res","valutes","Valute","USD","Value","EUR","url","fetch","ok","Error","status","json","App","currencyService","loadingCurrentCurrency","then","onLoadCurrentCurrency","catch","path","element","state","updateCurrency","updateCurrentCurrencies","undefined","currentEurotoUsd","currency","onChangeCurrency","reducer","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e58a8fd6.chunk.js","sourcesContent":["import Header from \"./header\";\r\n\r\nexport default Header","import { React } from \"react\";\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Nav } from \"react-bootstrap\";\r\nconst Header = () => {    \r\n    return (\r\n        <header className=\"header\">\r\n            <Navbar bg=\"primary\" variant=\"dark\">\r\n            <Container>\r\n            <Navbar.Brand href=\"/spa-app-currency-conversion\">Конвертер валют</Navbar.Brand>\r\n            <Nav className=\"me-auto\">\r\n              <Nav.Link href=\"/spa-app-currency-conversion\">Главная</Nav.Link>\r\n              <Nav.Link href=\"/spa-app-currency-conversion/current-exchange-rate/\">Актуальный курс валют</Nav.Link>\r\n            </Nav>\r\n            </Container>\r\n          </Navbar>\r\n                        \r\n        </header>\r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default Header","import {React, Component} from \"react\";\r\nimport { Form} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport './currency-list.css';\r\nimport { sumTotal } from \"../../actions\";\r\n\r\n\r\nconst CurrencyList = ( {currentUsd, totalUsd, sumTotalUsd, sumUsd, userCurrency}) => {     \r\n    const insertTotal = (event) => {        \r\n        const item =event.target.value;\r\n        return sumTotalUsd(item)\r\n    }\r\n    return (     \r\n        <div className=\"currency-list\">\r\n            <div className=\"form\" >\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>{userCurrency} in RUB</Form.Label>\r\n                    <Form.Control\r\n                    onChange={insertTotal} type=\"number\" placeholder=\"Введите количество\" required pattern=\"[0-9]{5,10}\"/>\r\n                   \r\n                </Form.Group>\r\n                \r\n            </div>\r\n            <p className=\"result-block\">Итого:</p>\r\n            <p className=\"result-field\">{sumUsd}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nclass CurrencyListContainer extends Component {   \r\n    \r\n    \r\n    render () {\r\n        const {sumTotalUsd, sumUsd, userCurrency} = this.props\r\n        return (                \r\n                <CurrencyList sumUsd={sumUsd} sumTotalUsd={sumTotalUsd} userCurrency={userCurrency}/>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({currentCurrencies: {currentUsd, currentRUB, totalUsd, userCurrency, currentEURO}}) => {\r\n    let sumUsd = 0;\r\n    switch (userCurrency) {\r\n        case 'USD':\r\n            sumUsd = (currentUsd*totalUsd).toFixed(2);\r\n            break\r\n        case 'EURO':\r\n             sumUsd = (currentEURO*totalUsd).toFixed(2);\r\n             break\r\n        case 'RUB':\r\n             sumUsd = (currentRUB*totalUsd).toFixed(2);\r\n             break\r\n        default:\r\n            sumUsd = 0\r\n    }\r\n    \r\n    return {sumUsd, userCurrency}\r\n} \r\n\r\nconst mapDispatchToProps = (dispatch, action) => {\r\n    return {\r\n        sumTotalUsd: (item) => dispatch(sumTotal(item))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrencyListContainer)","const sumTotal = (item) => {\r\n    return {\r\n        type: 'SUM_TOTAL',\r\n        payload: item\r\n    }\r\n}\r\n\r\nconst changeCurrency = (item) => {\r\n    return {\r\n        type: 'CHANGE_CURRENCY',\r\n        payload: item\r\n    }\r\n}\r\n\r\nconst updateCurrency = (item) => {\r\n   \r\n    return {\r\n        type: 'UPDATE_CURRENCY',\r\n        payload: item\r\n    }\r\n}\r\n\r\nexport {sumTotal, changeCurrency, updateCurrency}","import {React, Fragment } from \"react\";\r\nimport CurrencyListContainer from \"../currency-list/currency-list\";\r\n\r\nconst HomePage = () => {\r\n    \r\n    return (\r\n        <Fragment>\r\n            <CurrencyListContainer />\r\n        </Fragment>  \r\n    )\r\n    \r\n}\r\nexport default HomePage","import {React, Fragment } from \"react\";\r\nimport \"./pages.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst CurrentCurrencies = ({currency1, currency2, exchangeCurrency_1, exchangeCurrency_2 }) => {\r\n   \r\n    return (\r\n        <Fragment >\r\n            <h3 className=\"pages pages__h3\">Актуальный курс валют:</h3>\r\n            <div className=\"pages__currency-window\">\r\n                <p className=\"pages__currency-window_p\">{exchangeCurrency_1}:</p>\r\n                <p className=\"pages__currency-window_p\">{currency1}</p>                \r\n            </div>\r\n            <div className=\"pages__currency-window\">\r\n                <p className=\"pages__currency-window_p\">{exchangeCurrency_2}:</p>\r\n                <p className=\"pages__currency-window_p\">{currency2}</p>\r\n            </div>\r\n        </Fragment>  \r\n    )   \r\n}\r\n\r\nconst mapStateToProps = ({currentCurrencies: {currentUsdToRub, currentUsdToEuro, currentEuroToRub,\r\n    currentEuroToUsd, currentRubToEuro, currentRubToUsd, userCurrency,exchangeCurrency_1,exchangeCurrency_2}}) => {\r\n        switch(userCurrency) {\r\n            case 'USD':\r\n                return {\r\n                    exchangeCurrency_1,\r\n                    exchangeCurrency_2,\r\n                    currency1 : currentUsdToEuro,\r\n                    currency2 : currentUsdToRub\r\n                }\r\n            case 'EURO' : \r\n                return {\r\n                    exchangeCurrency_1,\r\n                    exchangeCurrency_2,\r\n                    currency1 : currentEuroToUsd,\r\n                    currency2 : currentEuroToRub\r\n                }\r\n            case 'RUB' :\r\n                return {\r\n                    exchangeCurrency_1,\r\n                    exchangeCurrency_2,\r\n                    currency1 : currentRubToUsd,\r\n                    currency2 : currentRubToEuro\r\n                }\r\n            default:\r\n                return null\r\n        }\r\n  \r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(CurrentCurrencies)","import {React, Component} from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeCurrency} from \"../../actions\";\r\n\r\n\r\n\r\n const UserCurrency = ({userChangeCurrency}) => {     \r\n    const onUserChangeCurrency = (event) => {\r\n        const item = event.target.value;    \r\n            \r\n        return userChangeCurrency(item)\r\n    }\r\n        return (\r\n          <div className=\"currency-list currency-list-user\">\r\n            <p className=\"currency-list-_p\" >Ваша валюта:</p>\r\n            <Form.Select\r\n            onChange = {onUserChangeCurrency} aria-label=\"Default select example\">\r\n              \r\n                <option value=\"USD\">USD</option>\r\n                <option value=\"EURO\">EURO</option>\r\n                <option value=\"RUB\">RUB</option>\r\n            </Form.Select>\r\n          </div>\r\n        )\r\n   }\r\n\r\n\r\nclass UserCurrencyContainer extends Component  {\r\n    \r\n    render () {\r\n        const {userChangeCurrency} = this.props\r\n        return (\r\n        <UserCurrency userChangeCurrency={userChangeCurrency}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({userChangeCurrency}) => {\r\n    return {userChangeCurrency}\r\n} \r\n\r\nconst mapDispatchToProps = (dispatch, action) => {\r\n    return {       \r\n        userChangeCurrency: (item) => dispatch(changeCurrency(item))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserCurrencyContainer)\r\n","import UserCurrency from \"./user-currency\";\r\n\r\nexport default UserCurrency","export default class CurrencyService {\r\n    apiBase = 'https://www.cbr-xml-daily.ru/daily_json.js'\r\n\r\n    async getCurrency(url) {\r\n\r\n    const res = await fetch(this.apiBase);\r\n        \r\n    if (!res.ok) {\r\n        // eslint-disable-next-line no-useless-concat\r\n        throw new Error (`Could not fetch ${this.apiBase}` + ` , received ${res.status}`)\r\n      }\r\n      \r\n\r\n    return res.json()\r\n\r\n    }\r\n\r\n    getCurrencies = async () => {\r\n        const res = await this.getCurrency()\r\n        const valutes = {\r\n          currentUsdToRub:res.Valute.USD.Value,\r\n          currentEuroToRub: res.Valute.EUR.Value\r\n        }\r\n       \r\n        return valutes\r\n      }\r\n\r\n \r\n    }","import CurrencyService from \"./currency-service\";\r\n\r\nexport default CurrencyService","import {React, Component} from \"react\";\r\nimport Header from \"./components/header\";\r\nimport {HomePage, CurrentCurrencies} from \"./components/pages\";\r\nimport UserCurrencyContainer from \"./components/user-currency\"\r\nimport CurrencyService from \"./services\";\r\nimport {updateCurrency} from \"./actions\";\r\nimport {connect} from 'react-redux'\r\nimport { Routes, Route } from \"react-router\";\r\n\r\nclass App extends Component  {\r\n  currencyService = new CurrencyService()\r\n\r\n\r\n  loadingCurrentCurrency = () => {\r\n    this.currencyService\r\n    .getCurrencies()\r\n    .then(this.props.onLoadCurrentCurrency)\r\n    .catch()\r\n  }\r\n\r\n componentDidMount(){\r\n   this.loadingCurrentCurrency()\r\n }\r\n\r\n  render () \r\n  {\r\n    return (\r\n      <div className=\"App\">        \r\n          <Header />\r\n          <UserCurrencyContainer />\r\n          <Routes>\r\n            <Route path=\"/spa-app-currency-conversion/\" element={<HomePage />} />\r\n            <Route path=\"/\" element={<HomePage />} />\r\n            <Route path=\"/spa-app-currency-conversion/current-exchange-rate/\" element={<CurrentCurrencies />} />  \r\n          </Routes>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return state\r\n} \r\n\r\nconst mapDispatchToProps = (dispatch, action) => {\r\n  return {\r\n    onLoadCurrentCurrency: (item) => dispatch(updateCurrency(item))\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","const onChangeCurrency = (state, currency) => {\r\n    if (currency.payload === \"USD\") {\r\n        return {\r\n            ...state.currentCurrencies,\r\n            userCurrency: currency.payload,\r\n            exchangeCurrency_1: 'EURO',\r\n            exchangeCurrency_2: \"RUB\"\r\n        }\r\n    } \r\n    else if (currency.payload === \"EURO\") {\r\n        return {\r\n            ...state.currentCurrencies,\r\n            userCurrency: currency.payload,\r\n            exchangeCurrency_1: 'USD',\r\n            exchangeCurrency_2: \"RUB\"\r\n        }\r\n    }\r\n    else {\r\n        return {\r\n            ...state.currentCurrencies,\r\n            userCurrency: currency.payload,\r\n            exchangeCurrency_1: 'USD',\r\n            exchangeCurrency_2: \"EUR\"\r\n        }\r\n    }\r\n    \r\n}\r\n\r\n\r\nconst updateCurrentCurrencies = (state , action) => {\r\n    \r\n    if (state === undefined) {\r\n        return {\r\n                currentUsdToRub:'70',\r\n                currentUsdToEuro:'0',\r\n                currentEuroToRub:'70',\r\n                currentEurotoUsd:'0',\r\n                currentRubToEuro:'70',\r\n                currentRubToUsd:'0',\r\n                totalUsd:  '0',\r\n                sumUsd: '0',\r\n                currentEURO: '90',\r\n                currentRUB: '1',\r\n                userCurrency: 'USD',\r\n                exchangeCurrency_1: \"EURO\",\r\n                exchangeCurrency_2: 'RUB'\r\n        }\r\n    }\r\n \r\n\r\n    switch (action.type) {\r\n        case 'SUM_TOTAL':            \r\n            return {\r\n                ...state.currentCurrencies,\r\n                totalUsd:  action.payload,\r\n                               \r\n            };\r\n\r\n        case 'CHANGE_CURRENCY':           \r\n            return onChangeCurrency(state, action)\r\n            \r\n\r\n        case 'UPDATE_CURRENCY':\r\n            const {currentUsdToRub, currentEuroToRub} = action.payload;\r\n            const currentUsdToEuro = currentUsdToRub/currentEuroToRub;\r\n            const currentEuroToUsd = currentEuroToRub/currentUsdToRub  ;          \r\n            const currentRubToEuro = 1/currentEuroToRub;\r\n            const currentRubToUsd = 1/currentUsdToRub;\r\n            return {\r\n                ...state.currentCurrencies,\r\n                currentUsdToRub, currentUsdToEuro, currentEuroToRub,\r\n                currentEuroToUsd, currentRubToEuro, currentRubToUsd                              \r\n            }\r\n        default: return state.currentCurrencies\r\n    }\r\n}\r\n\r\n\r\nexport default updateCurrentCurrencies","import updateCurrentCurrencies from \"./currentCurrencies\"\r\n\r\n\r\nconst reducer = (state, action) => {\r\n    return {\r\n        currentCurrencies: updateCurrentCurrencies(state , action)\r\n    }\r\n}\r\nexport default reducer;\r\n","import reducer from \"./reducers\";\r\nimport {createStore} from 'redux';\r\nconst store = createStore(reducer);\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app';\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router} from \"react-router-dom\";\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}